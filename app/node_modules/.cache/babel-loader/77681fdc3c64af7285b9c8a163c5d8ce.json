{"ast":null,"code":"import { getLostPets, reportPet } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_LOSTPET_STARTED = 'GET_LOSTPET_STARTED';\nexport const GET_LOSTPET_SUCCESS = 'GET_LOSTPET_SUCCESS';\nexport const GET_LOSTPET_ERROR = 'GET_LOSTPET_ERROR';\nexport const CREATE_LOSTPET_STARTED = 'CREATE_LOSTPET_STARTED';\nexport const CREATE_LOSTPET_SUCCESS = 'CREATE_LOSTPET_SUCCESS';\nexport const CREATE_LOSTPET_ERROR = 'CREATE_LOSTPET_ERROR';\nconst lostpetsActions = {\n  getLostPets: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_LOSTPET_STARTED\n      });\n      let response = await getLostPets();\n      dispatch({\n        type: GET_LOSTPET_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING LOST PETS' + error);\n      dispatch({\n        type: GET_LOSTPET_ERROR\n      });\n    }\n  },\n  reportPet: data => async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_LOSTPET_STARTED\n      });\n      await reportPet(data);\n      dispatch({\n        type: CREATE_LOSTPET_SUCCESS,\n        payload: {\n          message: 'lost pet report added successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: CREATE_LOSTPET_ERROR,\n        payload: {\n          message: 'failed to report lost pet!'\n        }\n      });\n    }\n  }\n};\nexport default lostpetsActions;","map":{"version":3,"sources":["D:/PS/PS/app/src/redux/actions/lostpets.js"],"names":["getLostPets","reportPet","toast","GET_LOSTPET_STARTED","GET_LOSTPET_SUCCESS","GET_LOSTPET_ERROR","CREATE_LOSTPET_STARTED","CREATE_LOSTPET_SUCCESS","CREATE_LOSTPET_ERROR","lostpetsActions","dispatch","type","response","payload","data","error","message","err"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,SAArB,QAAsC,uBAAtC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAGP,MAAMC,eAAe,GAAG;AAEtBT,EAAAA,WAAW,EAAE,MAAM,MAAOU,QAAP,IAAoB;AACrC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER;AADC,OAAD,CAAR;AAGA,UAAIS,QAAQ,GAAG,MAAMZ,WAAW,EAAhC;AACAU,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,mBADC;AAEPS,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEF;AADC;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAY,4BAA4BA,KAAxC;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGD;AACF,GApBqB;AAqBtBJ,EAAAA,SAAS,EAAGa,IAAD,IAAU,MAAOJ,QAAP,IAAoB;AACvC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL;AADC,OAAD,CAAR;AAGA,YAAML,SAAS,CAACa,IAAD,CAAf;AACAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,sBADC;AAEPM,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,oBADC;AAEPK,QAAAA,OAAO,EAAE;AACPG,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAMD;AACF;AAzCqB,CAAxB;AA4CA,eAAeP,eAAf","sourcesContent":["import { getLostPets,reportPet } from '../../actions/actions';\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const GET_LOSTPET_STARTED = 'GET_LOSTPET_STARTED'\r\nexport const GET_LOSTPET_SUCCESS = 'GET_LOSTPET_SUCCESS'\r\nexport const GET_LOSTPET_ERROR = 'GET_LOSTPET_ERROR'\r\n\r\nexport const CREATE_LOSTPET_STARTED = 'CREATE_LOSTPET_STARTED'\r\nexport const CREATE_LOSTPET_SUCCESS = 'CREATE_LOSTPET_SUCCESS'\r\nexport const CREATE_LOSTPET_ERROR = 'CREATE_LOSTPET_ERROR'\r\n\r\n\r\nconst lostpetsActions = {\r\n\r\n  getLostPets: () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_LOSTPET_STARTED,\r\n      });\r\n      let response = await getLostPets()\r\n      dispatch({\r\n        type: GET_LOSTPET_SUCCESS,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      toast.error('ERROR GETTING LOST PETS' + error)\r\n      dispatch({\r\n        type: GET_LOSTPET_ERROR,\r\n      });\r\n    }\r\n  },\r\n  reportPet: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_LOSTPET_STARTED,\r\n      });\r\n      await reportPet(data);\r\n      dispatch({\r\n        type: CREATE_LOSTPET_SUCCESS,\r\n        payload: {\r\n          message: 'lost pet report added successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CREATE_LOSTPET_ERROR,\r\n        payload: {\r\n          message: 'failed to report lost pet!',\r\n        }\r\n      })\r\n    }\r\n  },\r\n};\r\n\r\nexport default lostpetsActions;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}