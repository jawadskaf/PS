{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\Chart.js\";\nimport axios from 'axios';\nimport React, { Component, useState, useEffect } from 'react';\nimport \"../styles.css\";\nimport SearchBar from 'search-bar-react';\nimport { getOrders } from \"../actions/actions\";\nimport { Line } from 'react-chartjs-2';\n\nclass MedicineChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.Chart = () => {\n      const [chart, setChart] = useState({}); //fetchData()\n\n      function fetchData() {\n        getOrders().then(res => {\n          setChart({\n            res\n          });\n          console.log(res);\n          setChart(getOrders);\n          console.log(res);\n          const label = res.map((chart, index) => {\n            console.log(chart.medicinename);\n            return chart.medicinename;\n          });\n          const user = res.map((chart, index) => {\n            console.log(chart.userid);\n            return chart.userid;\n          });\n          console.log(label);\n          console.log(user); //  const datasets =  [{\n          //     label: \"My First dataset\",\n          //     data: [label,user],\n          //   }]   \n\n          const data = {\n            labels: [label],\n            datasets: [{\n              label: \"My First dataset\",\n              backgroundColor: 'rgb(255, 99, 132)',\n              borderColor: 'rgb(255, 99, 132)',\n              data: [user]\n            }]\n          };\n          console.log(\"got here\"); // console.log(datasets)\n\n          console.log(data);\n        }); // getOrders().then(res => res.json()).then((jsonarray) => {\n        //                     var labels = jsonarray.map(function(e) {\n        //                         console.log(e.medicineid);\n        //                         console.log(labels);\n        //                         return e.medicineid;\n        //                     });\n        // {chart &&\n        //     chart.map((book, index) => {\n        //                     })}\n        // const labels = chart.map(chart => {\n        //     console.log(chart.medicineid);\n        //    console.log(labels);\n        //  return chart.medicineid;\n        // });\n        //  const filtered = books.filter(book => {\n        //     console.log(books)\n        //     console.log(booksFiltered)\n        //     console.log(book)\n        //     console.log(book.name)\n        //     // {books &&\n        //     //     books.map((book, index) => {\n        //             return book.name.includes(input)\n        // })\n        // console.log(books)\n        //console.log(booksFiltered)\n        // console.log(response.data.authors)\n      }\n\n      useEffect(() => {\n        fetchData();\n      }, []);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      chartData: fetchData,\n      location: \"Test\",\n      legendPosition: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }\n    })));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/Chart.js"],"names":["axios","React","Component","useState","useEffect","SearchBar","getOrders","Line","MedicineChart","Chart","chart","setChart","fetchData","then","res","console","log","label","map","index","medicinename","user","userid","data","labels","datasets","backgroundColor","borderColor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,MAAMC,aAAN,SAA4BN,SAA5B,CAAqC;AAAA;AAAA;;AAAA,SAEpCO,KAFoC,GAE7B,MAAK;AACT,YAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CADS,CAMX;;AAGE,eAASS,SAAT,GAAsB;AAClBN,QAAAA,SAAS,GAAGO,IAAZ,CAAkBC,GAAD,IAAQ;AACrBH,UAAAA,QAAQ,CAAC;AAACG,YAAAA;AAAD,WAAD,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAGJH,UAAAA,QAAQ,CAACL,SAAD,CAAR;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,gBAAMG,KAAK,GAAGH,GAAG,CAACI,GAAJ,CAAQ,CAACR,KAAD,EAAOS,KAAP,KAAe;AAChCJ,YAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACU,YAAlB;AACA,mBAAOV,KAAK,CAACU,YAAb;AACH,WAHY,CAAd;AAIC,gBAAMC,IAAI,GAAGP,GAAG,CAACI,GAAJ,CAAQ,CAACR,KAAD,EAAOS,KAAP,KAAe;AAChCJ,YAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACY,MAAlB;AACA,mBAAOZ,KAAK,CAACY,MAAb;AACH,WAHY,CAAb;AAIAP,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EAhByB,CAkBb;AACA;AACA;AACA;;AAEE,gBAAME,IAAI,GAAE;AACVC,YAAAA,MAAM,EAAE,CAACP,KAAD,CADE;AAEVQ,YAAAA,QAAQ,EAAE,CAAC;AACTR,cAAAA,KAAK,EAAE,kBADE;AAETS,cAAAA,eAAe,EAAE,mBAFR;AAGTC,cAAAA,WAAW,EAAE,mBAHJ;AAITJ,cAAAA,IAAI,EAAE,CAACF,IAAD;AAJG,aAAD;AAFA,WAAZ;AAUAN,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAjCW,CAkCD;;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACH,SApCrB,EADkB,CAyClB;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACG;AACC;AACD;AACF;;AAEDnB,MAAAA,SAAS,CAAE,MAAM;AAACQ,QAAAA,SAAS;AAAG,OAArB,EAAsB,EAAtB,CAAT;AAEH,KAvFoC;AAAA;;AAwFrCgB,EAAAA,MAAM,GAAE;AACJ,wBAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACiB;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEhB,SAAjB;AAA4B,MAAA,QAAQ,EAAC,MAArC;AAA4C,MAAA,cAAc,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADjB,CAFJ;AASC;;AAlGgC;;AAsGrC,eAAeH,KAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { Component,useState,useEffect } from 'react';\r\nimport \"../styles.css\";\r\nimport SearchBar from 'search-bar-react'\r\nimport { getOrders} from \"../actions/actions\";\r\nimport { Line } from 'react-chartjs-2';\r\nclass MedicineChart extends Component{\r\n    \r\n Chart= () =>{\r\n    const [chart, setChart] = useState({});\r\n\r\n\r\n      \r\n\r\n  //fetchData()\r\n\r\n  \r\n    function fetchData () {\r\n        getOrders().then((res) =>{\r\n            setChart({res});\r\n            console.log(res);\r\n        \r\n\r\n        setChart(getOrders)\r\n        console.log(res);\r\n       const label = res.map((chart,index)=>{\r\n            console.log(chart.medicinename)\r\n            return chart.medicinename;\r\n        })\r\n        const user = res.map((chart,index)=>{\r\n            console.log(chart.userid)\r\n            return chart.userid;\r\n        })\r\n        console.log(label)\r\n        console.log(user)\r\n   \r\n                    //  const datasets =  [{\r\n                    //     label: \"My First dataset\",\r\n                    //     data: [label,user],\r\n                    //   }]   \r\n\r\n                      const data= {\r\n                        labels: [label],\r\n                        datasets: [{\r\n                          label: \"My First dataset\",\r\n                          backgroundColor: 'rgb(255, 99, 132)',\r\n                          borderColor: 'rgb(255, 99, 132)',\r\n                          data: [user],\r\n                        }]\r\n                      }\r\n                                \r\n                      console.log(\"got here\")\r\n                                // console.log(datasets)\r\n                                console.log(data)\r\n                            });\r\n                            \r\n                           \r\n\r\n        // getOrders().then(res => res.json()).then((jsonarray) => {\r\n        //                     var labels = jsonarray.map(function(e) {\r\n        //                         console.log(e.medicineid);\r\n        //                         console.log(labels);\r\n        //                         return e.medicineid;\r\n        //                     });\r\n    \r\n\r\n        // {chart &&\r\n        //     chart.map((book, index) => {\r\n        //                     })}\r\n        // const labels = chart.map(chart => {\r\n        //     console.log(chart.medicineid);\r\n        //    console.log(labels);\r\n        //  return chart.medicineid;\r\n        // });\r\n     \r\n     \r\n    //  const filtered = books.filter(book => {\r\n    //     console.log(books)\r\n    //     console.log(booksFiltered)\r\n    //     console.log(book)\r\n    //     console.log(book.name)\r\n    //     // {books &&\r\n    //     //     books.map((book, index) => {\r\n        \r\n    //             return book.name.includes(input)\r\n    // })\r\n       // console.log(books)\r\n        //console.log(booksFiltered)\r\n       // console.log(response.data.authors)\r\n    }\r\n  \r\n    useEffect( () => {fetchData()},[]);\r\n    \r\n}\r\nrender(){\r\n    return (\r\n        \r\n        <div className=\"App\">\r\n                         <header className=\"App-header\">\r\n        \r\n                           <Line chartData={fetchData} location=\"Test\" legendPosition=\"bottom\"/>\r\n                         </header>\r\n                  </div>\r\n      );\r\n    }\r\n    \r\n}\r\n\r\nexport default Chart;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}