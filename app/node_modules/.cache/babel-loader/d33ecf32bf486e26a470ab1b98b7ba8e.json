{"ast":null,"code":"import { getUsers, deleteUser } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_USERS_STARTED = 'GET_USERS_STARTED';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_ERROR = 'GET_USERS_ERROR';\nexport const DELETE_USERS_SUCCESS = 'DELETE_USERS_SUCCESS';\nexport const DELETE_USERS_STARTED = 'DELETE_USERS_STARTED';\nexport const DELETE_USERS_ERROR = 'DELETE_USERS_ERROR';\nconst usersActions = {\n  getUsers: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_USERS_STARTED\n      });\n      let response = await getUsers();\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING USERS' + error);\n      dispatch({\n        type: GET_USERS_ERROR\n      });\n    }\n  },\n  deleteUser: userID => async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_USERS_STARTED\n      });\n      await deleteUser(userID);\n      dispatch({\n        type: DELETE_USERS_SUCCESS,\n        payload: {\n          message: 'deleted successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_USERS_ERROR\n      });\n    }\n  }\n};\nexport default usersActions;","map":{"version":3,"sources":["C:/Projects/node/csis279-app/src/redux/actions/users.js"],"names":["getUsers","deleteUser","toast","GET_USERS_STARTED","GET_USERS_SUCCESS","GET_USERS_ERROR","DELETE_USERS_SUCCESS","DELETE_USERS_STARTED","DELETE_USERS_ERROR","usersActions","dispatch","type","response","payload","data","error","userID","message","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,uBAArC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,MAAMC,YAAY,GAAG;AAEjBT,EAAAA,QAAQ,EAAE,MAAM,MAAOU,QAAP,IAAoB;AAChC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER;AADC,OAAD,CAAR;AAGA,UAAIS,QAAQ,GAAG,MAAMZ,QAAQ,EAA7B;AACAU,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,iBADC;AAEPS,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAEF;AADD;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAY,wBAAsBA,KAAlC;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGD;AACJ,GApBgB;AAqBjBJ,EAAAA,UAAU,EAAGe,MAAD,IAAY,MAAON,QAAP,IAAmB;AACzC,QAAG;AACDA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ;AADC,OAAD,CAAR;AAGA,YAAMN,UAAU,CAACe,MAAD,CAAhB;AACAN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,oBADC;AAEPO,QAAAA,OAAO,EAAE;AACPI,UAAAA,OAAO,EAAE;AADF;AAFF,OAAD,CAAR;AAMD,KAXD,CAWC,OAAMC,GAAN,EAAU;AACTR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH;AADC,OAAD,CAAR;AAGD;AACF;AAtCgB,CAArB;AAyCA,eAAeC,YAAf","sourcesContent":["import { getUsers, deleteUser } from '../../actions/actions';\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const GET_USERS_STARTED = 'GET_USERS_STARTED'\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\r\nexport const GET_USERS_ERROR = 'GET_USERS_ERROR'\r\n\r\nexport const DELETE_USERS_SUCCESS = 'DELETE_USERS_SUCCESS'\r\nexport const DELETE_USERS_STARTED = 'DELETE_USERS_STARTED'\r\nexport const DELETE_USERS_ERROR = 'DELETE_USERS_ERROR'\r\n\r\nconst usersActions = {\r\n\r\n    getUsers: () => async (dispatch) => {\r\n        try {\r\n          dispatch({\r\n            type: GET_USERS_STARTED,\r\n          });\r\n          let response = await getUsers()\r\n          dispatch({\r\n            type: GET_USERS_SUCCESS,\r\n            payload: {\r\n                data: response,\r\n              },\r\n          });\r\n        } catch (error) {\r\n          toast.error('ERROR GETTING USERS'+error)\r\n          dispatch({\r\n            type: GET_USERS_ERROR,\r\n          });\r\n        }\r\n    },\r\n    deleteUser: (userID) => async (dispatch) =>{\r\n      try{\r\n        dispatch({\r\n          type: DELETE_USERS_STARTED,\r\n        });\r\n        await deleteUser(userID);\r\n        dispatch({\r\n          type: DELETE_USERS_SUCCESS,\r\n          payload: {\r\n            message: 'deleted successfully',\r\n          }\r\n        });\r\n      }catch(err){\r\n        dispatch({\r\n          type: DELETE_USERS_ERROR,\r\n        })\r\n      }\r\n    }  \r\n  };\r\n\r\nexport default usersActions;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}