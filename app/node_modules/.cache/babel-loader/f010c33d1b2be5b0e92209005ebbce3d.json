{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\Chart.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport \"../styles.css\";\nimport SearchBar from 'search-bar-react';\nimport { getOrders } from \"../actions/actions\";\nimport { Line } from 'react-chartjs-2';\nimport { render } from 'react-dom';\nimport '../App.css'; // import { ChartControl } from \"@pnp/spfx-controls-react/lib/ChartControl\";\n\nfunction Chart() {\n  const [chart, setChart] = useState({});\n  const [data, setData] = useState({});\n  console.log(\"heyy\");\n  console.log(data);\n\n  function fetchData() {\n    getOrders().then(res => {\n      setChart({\n        res\n      });\n      console.log(res);\n      setChart(getOrders);\n      console.log(res);\n      const label = res.map((chart, index) => {\n        console.log(chart.medicinename);\n        return parseInt(chart.medicinename);\n      });\n      const user = res.map((chart, index) => {\n        console.log(chart.userid);\n        return chart.userid;\n      });\n      console.log(label);\n      console.log(user);\n      setData({\n        labels: [label],\n        datasets: [{\n          label: \"Data Visualizing\",\n          //   backgroundColor: 'rgb(255, 99, 132)',\n          //   borderColor: 'rgb(255, 99, 132)',\n          data: [user]\n        }]\n      });\n      console.log(\"got here\");\n      console.log(data);\n      console.log(\"end\");\n    }); // getOrders().then(res => res.json()).then((jsonarray) => {\n    //                     var labels = jsonarray.map(function(e) {\n    //                         console.log(e.medicineid);\n    //                         console.log(labels);\n    //                         return e.medicineid;\n    //                     });\n    // {chart &&\n    //     chart.map((book, index) => {\n    //                     })}\n    // const labels = chart.map(chart => {\n    //     console.log(chart.medicineid);\n    //    console.log(labels);\n    //  return chart.medicineid;\n    // });\n    //  const filtered = books.filter(book => {\n    //     console.log(books)\n    //     console.log(booksFiltered)\n    //     console.log(book)\n    //     console.log(book.name)\n    //     // {books &&\n    //     //     books.map((book, index) => {\n    //             return book.name.includes(input)\n    // })\n    // console.log(books)\n    //console.log(booksFiltered)\n    // console.log(response.data.authors)\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    location: \"Test\",\n    legendPosition: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 28\n    }\n  })));\n}\n\nexport default Chart;","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/Chart.js"],"names":["axios","React","useState","useEffect","SearchBar","getOrders","Line","render","Chart","chart","setChart","data","setData","console","log","fetchData","then","res","label","map","index","medicinename","parseInt","user","userid","labels","datasets"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,YAAP,C,CACA;;AACA,SAASC,KAAT,GAAgB;AAEZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,EAAD,CAA/B;AACFW,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAGE,WAASI,SAAT,GAAsB;AAElBV,IAAAA,SAAS,GAAGW,IAAZ,CAAkBC,GAAD,IAAQ;AACrBP,MAAAA,QAAQ,CAAC;AAACO,QAAAA;AAAD,OAAD,CAAR;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAGJP,MAAAA,QAAQ,CAACL,SAAD,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,YAAMC,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQ,CAACV,KAAD,EAAOW,KAAP,KAAe;AAChCP,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACY,YAAlB;AACA,eAAOC,QAAQ,CAACb,KAAK,CAACY,YAAP,CAAf;AACH,OAHY,CAAd;AAIC,YAAME,IAAI,GAAGN,GAAG,CAACE,GAAJ,CAAQ,CAACV,KAAD,EAAOW,KAAP,KAAe;AAChCP,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACe,MAAlB;AACA,eAAOf,KAAK,CAACe,MAAb;AACH,OAHY,CAAb;AAIAX,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAIcX,MAAAA,OAAO,CAAC;AACNa,QAAAA,MAAM,EAAE,CAACP,KAAD,CADF;AAENQ,QAAAA,QAAQ,EAAE,CAAC;AACTR,UAAAA,KAAK,EAAE,kBADE;AAEX;AACA;AACEP,UAAAA,IAAI,EAAE,CAACY,IAAD;AAJG,SAAD;AAFJ,OAAD,CAAP;AAWAV,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACUD,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEH,KAnCrB,EAFkB,CAyClB;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACG;AACC;AACD;AAIF;;AAEDX,EAAAA,SAAS,CAAE,MAAM;AAACY,IAAAA,SAAS;AAAG,GAArB,EAAsB,EAAtB,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACiB;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,IAAZ;AAAkB,IAAA,QAAQ,EAAC,MAA3B;AAAkC,IAAA,cAAc,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADjB,CADJ;AAUH;;AAGD,eAAeH,KAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useState,useEffect } from 'react';\r\nimport \"../styles.css\";\r\nimport SearchBar from 'search-bar-react'\r\nimport { getOrders} from \"../actions/actions\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport { render } from 'react-dom';\r\nimport '../App.css';\r\n// import { ChartControl } from \"@pnp/spfx-controls-react/lib/ChartControl\";\r\nfunction Chart(){\r\n   \r\n    const [chart, setChart] = useState({});\r\n    const [data,setData] = useState({});\r\n  console.log(\"heyy\")\r\n  console.log(data)\r\n\r\n  \r\n    function fetchData () {\r\n        \r\n        getOrders().then((res) =>{\r\n            setChart({res});\r\n            console.log(res);\r\n        \r\n\r\n        setChart(getOrders)\r\n        console.log(res);\r\n       const label = res.map((chart,index)=>{\r\n            console.log(chart.medicinename)\r\n            return parseInt(chart.medicinename);\r\n        })\r\n        const user = res.map((chart,index)=>{\r\n            console.log(chart.userid)\r\n            return chart.userid;\r\n        })\r\n        console.log(label)\r\n        console.log(user)\r\n   \r\n                    \r\n\r\n                      setData({\r\n                        labels: [label],\r\n                        datasets: [{\r\n                          label: \"Data Visualizing\",\r\n                        //   backgroundColor: 'rgb(255, 99, 132)',\r\n                        //   borderColor: 'rgb(255, 99, 132)',\r\n                          data: [user],\r\n                        }]\r\n                      }\r\n                      )\r\n                                \r\n                      console.log(\"got here\")\r\n                                console.log(data)\r\n                                console.log(\"end\")\r\n                                \r\n                            });\r\n                            \r\n                           \r\n\r\n        // getOrders().then(res => res.json()).then((jsonarray) => {\r\n        //                     var labels = jsonarray.map(function(e) {\r\n        //                         console.log(e.medicineid);\r\n        //                         console.log(labels);\r\n        //                         return e.medicineid;\r\n        //                     });\r\n    \r\n\r\n        // {chart &&\r\n        //     chart.map((book, index) => {\r\n        //                     })}\r\n        // const labels = chart.map(chart => {\r\n        //     console.log(chart.medicineid);\r\n        //    console.log(labels);\r\n        //  return chart.medicineid;\r\n        // });\r\n     \r\n     \r\n    //  const filtered = books.filter(book => {\r\n    //     console.log(books)\r\n    //     console.log(booksFiltered)\r\n    //     console.log(book)\r\n    //     console.log(book.name)\r\n    //     // {books &&\r\n    //     //     books.map((book, index) => {\r\n        \r\n    //             return book.name.includes(input)\r\n    // })\r\n       // console.log(books)\r\n        //console.log(booksFiltered)\r\n       // console.log(response.data.authors)\r\n       \r\n      \r\n    \r\n    }\r\n  \r\n    useEffect( () => {fetchData()},[]);\r\n    \r\n\r\n    return (\r\n        <div className=\"App\">\r\n                         <header className=\"container\">\r\n        \r\n                           <Line data={data} location=\"Test\" legendPosition=\"bottom\"/>\r\n                         </header>\r\n                  </div>\r\n      );\r\n\r\n    \r\n}\r\n\r\n\r\nexport default Chart;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}