{"ast":null,"code":"import { getUsers, deleteUser, registerUser, updateUser } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_USERS_STARTED = 'GET_USERS_STARTED';\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\nexport const GET_USERS_ERROR = 'GET_USERS_ERROR';\nexport const CREATE_USERS_STARTED = 'CREATE_USER_STARTED';\nexport const CREATE_USERS_SUCCESS = 'CREATE_USER_SUCCESS';\nexport const CREATE_USERS_ERROR = 'CREATE_USER_ERROR';\nexport const DELETE_USERS_SUCCESS = 'DELETE_USERS_SUCCESS';\nexport const DELETE_USERS_STARTED = 'DELETE_USERS_STARTED';\nexport const DELETE_USERS_ERROR = 'DELETE_USERS_ERROR';\nexport const UPDATE_USERS_SUCCESS = 'UPDATE_USERS_SUCCESS';\nexport const UPDATE_USERS_STARTED = 'UPDATE_USERS_STARTED';\nexport const UPDATE_USERS_ERROR = 'UPDATE_USERS_ERROR';\nconst usersActions = {\n  getUsers: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_USERS_STARTED\n      });\n      let response = await getUsers();\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING USERS' + error);\n      dispatch({\n        type: GET_USERS_ERROR\n      });\n    }\n  },\n  deleteUser: data => async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_USERS_STARTED\n      });\n      await deleteUser(data);\n      dispatch({\n        type: DELETE_USERS_SUCCESS,\n        payload: {\n          message: 'deleted successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_USERS_ERROR\n      });\n    }\n  },\n  registerUser: data => async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_USERS_STARTED\n      });\n      await registerUser(data);\n      dispatch({\n        type: CREATE_USERS_SUCCESS,\n        payload: {\n          message: 'added successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: CREATE_USERS_ERROR,\n        payload: {\n          message: 'failed to create account!'\n        }\n      });\n    }\n  },\n  updateUser: data => async dispatch => {\n    try {\n      dispatch({\n        type: UPDATE_USERS_STARTED\n      });\n      await updateUser(data);\n      dispatch({\n        type: UPDATE_USERS_SUCCESS,\n        payload: {\n          message: 'updated successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: UPDATE_USERS_ERROR,\n        payload: {\n          message: 'failed to update account!'\n        }\n      });\n    }\n  }\n};\nexport default usersActions;","map":{"version":3,"sources":["D:/PS/PS/app/src/redux/actions/users.js"],"names":["getUsers","deleteUser","registerUser","updateUser","toast","GET_USERS_STARTED","GET_USERS_SUCCESS","GET_USERS_ERROR","CREATE_USERS_STARTED","CREATE_USERS_SUCCESS","CREATE_USERS_ERROR","DELETE_USERS_SUCCESS","DELETE_USERS_STARTED","DELETE_USERS_ERROR","UPDATE_USERS_SUCCESS","UPDATE_USERS_STARTED","UPDATE_USERS_ERROR","usersActions","dispatch","type","response","payload","data","error","message","err"],"mappings":"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","sourcesContent":["import { getUsers, deleteUser, registerUser,updateUser } from '../../actions/actions';\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const GET_USERS_STARTED = 'GET_USERS_STARTED'\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\r\nexport const GET_USERS_ERROR = 'GET_USERS_ERROR'\r\n\r\nexport const CREATE_USERS_STARTED = 'CREATE_USER_STARTED'\r\nexport const CREATE_USERS_SUCCESS = 'CREATE_USER_SUCCESS'\r\nexport const CREATE_USERS_ERROR = 'CREATE_USER_ERROR'\r\n\r\nexport const DELETE_USERS_SUCCESS = 'DELETE_USERS_SUCCESS'\r\nexport const DELETE_USERS_STARTED = 'DELETE_USERS_STARTED'\r\nexport const DELETE_USERS_ERROR = 'DELETE_USERS_ERROR'\r\n\r\nexport const UPDATE_USERS_SUCCESS = 'UPDATE_USERS_SUCCESS'\r\nexport const UPDATE_USERS_STARTED = 'UPDATE_USERS_STARTED'\r\nexport const UPDATE_USERS_ERROR = 'UPDATE_USERS_ERROR'\r\n\r\nconst usersActions = {\r\n\r\n  getUsers: () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_USERS_STARTED,\r\n      });\r\n      let response = await getUsers()\r\n      dispatch({\r\n        type: GET_USERS_SUCCESS,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      toast.error('ERROR GETTING USERS' + error)\r\n      dispatch({\r\n        type: GET_USERS_ERROR,\r\n      });\r\n    }\r\n  },\r\n  deleteUser: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: DELETE_USERS_STARTED,\r\n      });\r\n      await deleteUser(data);\r\n      dispatch({\r\n        type: DELETE_USERS_SUCCESS,\r\n        payload: {\r\n          message: 'deleted successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DELETE_USERS_ERROR,\r\n      })\r\n    }\r\n  },\r\n  registerUser: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_USERS_STARTED,\r\n      });\r\n      await registerUser(data);\r\n      dispatch({\r\n        type: CREATE_USERS_SUCCESS,\r\n        payload: {\r\n          message: 'added successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CREATE_USERS_ERROR,\r\n        payload: {\r\n          message: 'failed to create account!',\r\n        }\r\n      })\r\n    }\r\n  },\r\n  updateUser: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: UPDATE_USERS_STARTED,\r\n      });\r\n      await updateUser(data);\r\n      dispatch({\r\n        type: UPDATE_USERS_SUCCESS,\r\n        payload: {\r\n          message: 'updated successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_USERS_ERROR,\r\n        payload: {\r\n          message: 'failed to update account!',\r\n        }\r\n      })\r\n    }\r\n  }\r\n};\r\n\r\nexport default usersActions;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}