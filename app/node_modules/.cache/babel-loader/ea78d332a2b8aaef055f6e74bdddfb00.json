{"ast":null,"code":"(function () {\n  var CardReactFormContainer, Payment, React, ReactCard, ReactDOM, createReactClass;\n  React = require('react');\n  createReactClass = require('create-react-class');\n  ReactDOM = require('react-dom');\n  Payment = require('payment');\n  ReactCard = require('./card-react-component');\n  CardReactFormContainer = createReactClass({\n    displayName: 'CardReactFormContainer',\n    getDefaultProps: function () {\n      return {\n        formatting: true,\n        formInputsNames: {\n          number: 'number',\n          expiry: 'expiry',\n          cvc: 'cvc',\n          name: 'name'\n        },\n        classes: {\n          valid: 'jp-card-valid',\n          invalid: 'jp-card-invalid'\n        },\n        initialValues: {},\n        fieldTypes: [\"number\", \"cvc\", \"expiry\", \"name\"]\n      };\n    },\n    getInitialState: function () {\n      return {\n        inputsValidationClass: {}\n      };\n    },\n    componentWillMount: function () {\n      var i, len, ref, results, type;\n      this.inputsValues = {};\n      this.inputsRefs = {};\n      this.cardFlipped = false;\n      ref = this.props.fieldTypes;\n      results = [];\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        type = ref[i];\n        results.push(this.inputsValues[this.props.formInputsNames[type]] = this.props.initialValues[type]);\n      }\n\n      return results;\n    },\n    componentDidMount: function () {\n      if (!this.props.container) {\n        console.log(\"Please provide a container react-card\");\n        return;\n      }\n\n      this.cardContainer = document.getElementById(this.props.container);\n\n      if (!this.cardContainer) {\n        console.log(\"couldn't find react-card container by its id. please make sure the correct id is provided\");\n        return;\n      }\n\n      if (this.props.formatting) {\n        this.formatInputs();\n      }\n\n      return this.renderCardComponent();\n    },\n    formatInputs: function () {\n      var inputsNames;\n      inputsNames = this.props.formInputsNames;\n      Payment.formatCardNumber(ReactDOM.findDOMNode(this.refs[this.inputsRefs[inputsNames[\"number\"]]]));\n      Payment.formatCardCVC(ReactDOM.findDOMNode(this.refs[this.inputsRefs[inputsNames[\"cvc\"]]]));\n      return Payment.formatCardExpiry(ReactDOM.findDOMNode(this.refs[this.inputsRefs[inputsNames[\"expiry\"]]]));\n    },\n    renderCardComponent: function () {\n      if (this.cardContainer) {\n        return ReactDOM.render(React.createElement(ReactCard, Object.assign({}, this.props, {\n          \"cardFlipped\": this.cardFlipped,\n          \"focusedInput\": this.focusedInput,\n          \"inputsValues\": this.inputsValues,\n          \"inputsValidationClass\": this.state.inputsValidationClass\n        })), this.cardContainer);\n      }\n    },\n    traverseChildrenAndRegisterInputs: function (children) {\n      if (typeof children !== 'object' || children === null) {\n        return children;\n      }\n\n      return React.Children.map(children, function (_this) {\n        return function (child) {\n          var inputsValidationClass, newClassName;\n\n          if (typeof child !== 'object' || child === null) {\n            return child;\n          }\n\n          if (child.props && child.props.name) {\n            newClassName = child.props.className;\n            inputsValidationClass = _this.state.inputsValidationClass[child.props.name];\n\n            if (child.ref) {\n              _this.inputsRefs[child.props.name] = child.ref;\n            } else {\n              _this.inputsRefs[child.props.name] = \"react-card-input-\" + child.props.name;\n            }\n\n            if (newClassName && inputsValidationClass) {\n              newClassName = newClassName + \" \" + inputsValidationClass;\n            } else if (inputsValidationClass) {\n              newClassName = inputsValidationClass;\n            }\n\n            return React.cloneElement(child, {\n              onKeyUp: _this.inputOnKeyUp,\n              onFocus: _this.inputOnFocus,\n              onBlur: _this.inputOnBlur,\n              ref: _this.inputsRefs[child.props.name],\n              defaultValue: _this.inputsValues[child.props.name],\n              className: newClassName\n            }, child.props && child.props.children);\n          } else {\n            return React.cloneElement(child, {}, _this.traverseChildrenAndRegisterInputs(child.props && child.props.children));\n          }\n        };\n      }(this));\n    },\n    inputOnKeyUp: function (event) {\n      this.inputsValues[event.target.name] = event.target.value;\n      this.validateInput(event.target.name, event.target.value);\n      return this.renderCardComponent();\n    },\n    inputOnFocus: function (event) {\n      this.focusedInput = event.target.name;\n\n      if (this.focusedInput === this.props.formInputsNames['cvc']) {\n        this.cardFlipped = true;\n      }\n\n      return this.renderCardComponent();\n    },\n    inputOnBlur: function (event) {\n      this.focusedInput = '';\n      this.cardFlipped = false;\n      return this.renderCardComponent();\n    },\n    validateInput: function (inputName, inputValue) {\n      var currentInputsValidationClass, inputsNames, objVal;\n      inputsNames = this.props.formInputsNames;\n      currentInputsValidationClass = this.state.inputsValidationClass;\n\n      switch (inputName) {\n        case inputsNames[\"expiry\"]:\n          objVal = Payment.fns.cardExpiryVal(inputValue);\n          currentInputsValidationClass[inputsNames[\"expiry\"]] = this.getInputValidationClass(Payment.fns.validateCardExpiry(objVal.month, objVal.year));\n          break;\n\n        case inputsNames[\"cvc\"]:\n          currentInputsValidationClass[inputsNames[\"cvc\"]] = this.getInputValidationClass(Payment.fns.validateCardCVC(inputValue, this.cardType));\n          break;\n\n        case inputsNames[\"number\"]:\n          currentInputsValidationClass[inputsNames[\"number\"]] = this.getInputValidationClass(Payment.fns.validateCardNumber(inputValue));\n          break;\n\n        case inputsNames[\"name\"]:\n          currentInputsValidationClass[inputsNames[\"name\"]] = this.getInputValidationClass(inputValue !== \"\");\n      }\n\n      return this.setState({\n        inputsValidationClass: currentInputsValidationClass\n      });\n    },\n    getInputValidationClass: function (inputValid) {\n      if (inputValid) {\n        return this.props.classes.valid;\n      } else {\n        return this.props.classes.invalid;\n      }\n    },\n    render: function () {\n      return React.createElement(\"div\", null, this.traverseChildrenAndRegisterInputs(this.props.children));\n    }\n  });\n  module.exports = CardReactFormContainer;\n}).call(this);","map":{"version":3,"sources":["D:/PS/PS/app/node_modules/card-react/lib/card-react-form-container.js"],"names":["CardReactFormContainer","Payment","React","ReactCard","ReactDOM","createReactClass","require","displayName","getDefaultProps","formatting","formInputsNames","number","expiry","cvc","name","classes","valid","invalid","initialValues","fieldTypes","getInitialState","inputsValidationClass","componentWillMount","i","len","ref","results","type","inputsValues","inputsRefs","cardFlipped","props","length","push","componentDidMount","container","console","log","cardContainer","document","getElementById","formatInputs","renderCardComponent","inputsNames","formatCardNumber","findDOMNode","refs","formatCardCVC","formatCardExpiry","render","createElement","Object","assign","focusedInput","state","traverseChildrenAndRegisterInputs","children","Children","map","_this","child","newClassName","className","cloneElement","onKeyUp","inputOnKeyUp","onFocus","inputOnFocus","onBlur","inputOnBlur","defaultValue","event","target","value","validateInput","inputName","inputValue","currentInputsValidationClass","objVal","fns","cardExpiryVal","getInputValidationClass","validateCardExpiry","month","year","validateCardCVC","cardType","validateCardNumber","setState","inputValid","module","exports","call"],"mappings":"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","sourcesContent":["(function() {\n  var CardReactFormContainer, Payment, React, ReactCard, ReactDOM, createReactClass;\n\n  React = require('react');\n\n  createReactClass = require('create-react-class');\n\n  ReactDOM = require('react-dom');\n\n  Payment = require('payment');\n\n  ReactCard = require('./card-react-component');\n\n  CardReactFormContainer = createReactClass({\n    displayName: 'CardReactFormContainer',\n    getDefaultProps: function() {\n      return {\n        formatting: true,\n        formInputsNames: {\n          number: 'number',\n          expiry: 'expiry',\n          cvc: 'cvc',\n          name: 'name'\n        },\n        classes: {\n          valid: 'jp-card-valid',\n          invalid: 'jp-card-invalid'\n        },\n        initialValues: {},\n        fieldTypes: [\"number\", \"cvc\", \"expiry\", \"name\"]\n      };\n    },\n    getInitialState: function() {\n      return {\n        inputsValidationClass: {}\n      };\n    },\n    componentWillMount: function() {\n      var i, len, ref, results, type;\n      this.inputsValues = {};\n      this.inputsRefs = {};\n      this.cardFlipped = false;\n      ref = this.props.fieldTypes;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        type = ref[i];\n        results.push(this.inputsValues[this.props.formInputsNames[type]] = this.props.initialValues[type]);\n      }\n      return results;\n    },\n    componentDidMount: function() {\n      if (!this.props.container) {\n        console.log(\"Please provide a container react-card\");\n        return;\n      }\n      this.cardContainer = document.getElementById(this.props.container);\n      if (!this.cardContainer) {\n        console.log(\"couldn't find react-card container by its id. please make sure the correct id is provided\");\n        return;\n      }\n      if (this.props.formatting) {\n        this.formatInputs();\n      }\n      return this.renderCardComponent();\n    },\n    formatInputs: function() {\n      var inputsNames;\n      inputsNames = this.props.formInputsNames;\n      Payment.formatCardNumber(ReactDOM.findDOMNode(this.refs[this.inputsRefs[inputsNames[\"number\"]]]));\n      Payment.formatCardCVC(ReactDOM.findDOMNode(this.refs[this.inputsRefs[inputsNames[\"cvc\"]]]));\n      return Payment.formatCardExpiry(ReactDOM.findDOMNode(this.refs[this.inputsRefs[inputsNames[\"expiry\"]]]));\n    },\n    renderCardComponent: function() {\n      if (this.cardContainer) {\n        return ReactDOM.render(React.createElement(ReactCard, Object.assign({}, this.props, {\n          \"cardFlipped\": this.cardFlipped,\n          \"focusedInput\": this.focusedInput,\n          \"inputsValues\": this.inputsValues,\n          \"inputsValidationClass\": this.state.inputsValidationClass\n        })), this.cardContainer);\n      }\n    },\n    traverseChildrenAndRegisterInputs: function(children) {\n      if (typeof children !== 'object' || children === null) {\n        return children;\n      }\n      return React.Children.map(children, (function(_this) {\n        return function(child) {\n          var inputsValidationClass, newClassName;\n          if (typeof child !== 'object' || child === null) {\n            return child;\n          }\n          if (child.props && child.props.name) {\n            newClassName = child.props.className;\n            inputsValidationClass = _this.state.inputsValidationClass[child.props.name];\n            if (child.ref) {\n              _this.inputsRefs[child.props.name] = child.ref;\n            } else {\n              _this.inputsRefs[child.props.name] = \"react-card-input-\" + child.props.name;\n            }\n            if (newClassName && inputsValidationClass) {\n              newClassName = newClassName + \" \" + inputsValidationClass;\n            } else if (inputsValidationClass) {\n              newClassName = inputsValidationClass;\n            }\n            return React.cloneElement(child, {\n              onKeyUp: _this.inputOnKeyUp,\n              onFocus: _this.inputOnFocus,\n              onBlur: _this.inputOnBlur,\n              ref: _this.inputsRefs[child.props.name],\n              defaultValue: _this.inputsValues[child.props.name],\n              className: newClassName\n            }, child.props && child.props.children);\n          } else {\n            return React.cloneElement(child, {}, _this.traverseChildrenAndRegisterInputs(child.props && child.props.children));\n          }\n        };\n      })(this));\n    },\n    inputOnKeyUp: function(event) {\n      this.inputsValues[event.target.name] = event.target.value;\n      this.validateInput(event.target.name, event.target.value);\n      return this.renderCardComponent();\n    },\n    inputOnFocus: function(event) {\n      this.focusedInput = event.target.name;\n      if (this.focusedInput === this.props.formInputsNames['cvc']) {\n        this.cardFlipped = true;\n      }\n      return this.renderCardComponent();\n    },\n    inputOnBlur: function(event) {\n      this.focusedInput = '';\n      this.cardFlipped = false;\n      return this.renderCardComponent();\n    },\n    validateInput: function(inputName, inputValue) {\n      var currentInputsValidationClass, inputsNames, objVal;\n      inputsNames = this.props.formInputsNames;\n      currentInputsValidationClass = this.state.inputsValidationClass;\n      switch (inputName) {\n        case inputsNames[\"expiry\"]:\n          objVal = Payment.fns.cardExpiryVal(inputValue);\n          currentInputsValidationClass[inputsNames[\"expiry\"]] = this.getInputValidationClass(Payment.fns.validateCardExpiry(objVal.month, objVal.year));\n          break;\n        case inputsNames[\"cvc\"]:\n          currentInputsValidationClass[inputsNames[\"cvc\"]] = this.getInputValidationClass(Payment.fns.validateCardCVC(inputValue, this.cardType));\n          break;\n        case inputsNames[\"number\"]:\n          currentInputsValidationClass[inputsNames[\"number\"]] = this.getInputValidationClass(Payment.fns.validateCardNumber(inputValue));\n          break;\n        case inputsNames[\"name\"]:\n          currentInputsValidationClass[inputsNames[\"name\"]] = this.getInputValidationClass(inputValue !== \"\");\n      }\n      return this.setState({\n        inputsValidationClass: currentInputsValidationClass\n      });\n    },\n    getInputValidationClass: function(inputValid) {\n      if (inputValid) {\n        return this.props.classes.valid;\n      } else {\n        return this.props.classes.invalid;\n      }\n    },\n    render: function() {\n      return React.createElement(\"div\", null, this.traverseChildrenAndRegisterInputs(this.props.children));\n    }\n  });\n\n  module.exports = CardReactFormContainer;\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}