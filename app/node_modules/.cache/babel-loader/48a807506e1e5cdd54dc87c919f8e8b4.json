{"ast":null,"code":"import axios from 'axios';\nconst hostApi = process.env.NODE_ENV === \"development\" ? \"http://localhost\" : \"http://localhost\";\nconst portApi = process.env.NODE_ENV === \"development\" ? 3001 : 3001;\nconst baseURLApi = `${hostApi}${portApi ? `:${portApi}` : ``}/api`;\n\nasync function getUsers() {\n  const url = `${baseURLApi}/users/users`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function getUser(id) {\n  const url = `${baseURLApi}/users/user`;\n  return await axios.post(url, id).then(response => response.data);\n}\n\nasync function registerUser(data) {\n  const url = `${baseURLApi}/users/register`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function deleteUser(id) {\n  const url = `${baseURLApi}/users/deleteUser`;\n  return await axios.post(url, id).then(response => response.data);\n}\n\nasync function logIn(data) {\n  const url = `${baseURLApi}/users/logIn`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function deleteBmi(data) {\n  const url = `${baseURLApi}/users/deleteBmi`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function registerBmiDetail(data) {\n  const url = `${baseURLApi}/users/registerBmiDetail`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function getBmi() {\n  const url = `${baseURLApi}/users/getBmi`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nexport { getUsers, getUser, registerUser, deleteUser, logIn, registerBmiDetail, getBmi, deleteBmi };","map":{"version":3,"sources":["D:/BMI/bmi-app/src/actions/actions.js"],"names":["axios","hostApi","process","env","NODE_ENV","portApi","baseURLApi","getUsers","url","get","then","response","data","getUser","id","post","registerUser","deleteUser","logIn","deleteBmi","registerBmiDetail","getBmi"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyC,kBAAzC,GAA8D,kBAA9E;AACA,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyC,IAAzC,GAAgD,IAAhE;AAEA,MAAME,UAAU,GAAI,GAAEL,OAAQ,GAAEI,OAAO,GAAI,IAAGA,OAAQ,EAAf,GAAoB,EAAE,MAA7D;;AAGA,eAAeE,QAAf,GAA0B;AACxB,QAAMC,GAAG,GAAI,GAAEF,UAAW,cAA1B;AACA,SAAO,MAAMN,KAAK,CAACS,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAA9C,CAAb;AACD;;AAED,eAAeC,OAAf,CAAuBC,EAAvB,EAA2B;AACzB,QAAMN,GAAG,GAAI,GAAEF,UAAW,aAA1B;AACA,SAAO,MAAMN,KAAK,CAACe,IAAN,CAAWP,GAAX,EAAgBM,EAAhB,EAAoBJ,IAApB,CAAyBC,QAAQ,IAAIA,QAAQ,CAACC,IAA9C,CAAb;AACD;;AAGD,eAAeI,YAAf,CAA4BJ,IAA5B,EACA;AACE,QAAMJ,GAAG,GAAI,GAAEF,UAAW,iBAA1B;AACA,SAAO,MAAMN,KAAK,CAACe,IAAN,CAAWP,GAAX,EAAgBI,IAAhB,EAAsBF,IAAtB,CAA2BC,QAAQ,IAAIA,QAAQ,CAACC,IAAhD,CAAb;AACD;;AAED,eAAeK,UAAf,CAA0BH,EAA1B,EACA;AACE,QAAMN,GAAG,GAAI,GAAEF,UAAW,mBAA1B;AACA,SAAO,MAAMN,KAAK,CAACe,IAAN,CAAWP,GAAX,EAAgBM,EAAhB,EAAoBJ,IAApB,CAAyBC,QAAQ,IAAIA,QAAQ,CAACC,IAA9C,CAAb;AACD;;AAGD,eAAeM,KAAf,CAAqBN,IAArB,EACA;AACE,QAAMJ,GAAG,GAAI,GAAEF,UAAW,cAA1B;AACA,SAAO,MAAMN,KAAK,CAACe,IAAN,CAAWP,GAAX,EAAgBI,IAAhB,EAAsBF,IAAtB,CAA2BC,QAAQ,IAAIA,QAAQ,CAACC,IAAhD,CAAb;AACD;;AAED,eAAeO,SAAf,CAAyBP,IAAzB,EACA;AACE,QAAMJ,GAAG,GAAI,GAAEF,UAAW,kBAA1B;AACA,SAAO,MAAMN,KAAK,CAACe,IAAN,CAAWP,GAAX,EAAgBI,IAAhB,EAAsBF,IAAtB,CAA2BC,QAAQ,IAAIA,QAAQ,CAACC,IAAhD,CAAb;AACD;;AAED,eAAeQ,iBAAf,CAAiCR,IAAjC,EACA;AACE,QAAMJ,GAAG,GAAI,GAAEF,UAAW,0BAA1B;AACA,SAAO,MAAMN,KAAK,CAACe,IAAN,CAAWP,GAAX,EAAgBI,IAAhB,EAAsBF,IAAtB,CAA2BC,QAAQ,IAAIA,QAAQ,CAACC,IAAhD,CAAb;AACD;;AACD,eAAeS,MAAf,GAAwB;AACtB,QAAMb,GAAG,GAAI,GAAEF,UAAW,eAA1B;AACA,SAAO,MAAMN,KAAK,CAACS,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcA,IAA9C,CAAb;AACD;;AAID,SACEL,QADF,EAEEM,OAFF,EAGEG,YAHF,EAIEC,UAJF,EAKEC,KALF,EAMEE,iBANF,EAOEC,MAPF,EAQEF,SARF","sourcesContent":["import axios from 'axios';\n\nconst hostApi = process.env.NODE_ENV === \"development\" ? \"http://localhost\" : \"http://localhost\";\nconst portApi = process.env.NODE_ENV === \"development\" ? 3001 : 3001;\n\nconst baseURLApi = `${hostApi}${portApi ? `:${portApi}` : ``}/api`;\n\n\nasync function getUsers() {\n  const url = `${baseURLApi}/users/users`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\nasync function getUser(id) {\n  const url = `${baseURLApi}/users/user`;\n  return await axios.post(url, id).then(response => response.data);\n}\n\n\nasync function registerUser(data)\n{\n  const url = `${baseURLApi}/users/register`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function deleteUser(id)\n{\n  const url = `${baseURLApi}/users/deleteUser`;\n  return await axios.post(url, id).then(response => response.data);\n}\n\n\nasync function logIn(data)\n{\n  const url = `${baseURLApi}/users/logIn`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function deleteBmi(data)\n{\n  const url = `${baseURLApi}/users/deleteBmi`;\n  return await axios.post(url, data).then(response => response.data);\n}\n\nasync function registerBmiDetail(data)\n{\n  const url = `${baseURLApi}/users/registerBmiDetail`;\n  return await axios.post(url, data).then(response => response.data);\n}\nasync function getBmi() {\n  const url = `${baseURLApi}/users/getBmi`;\n  return await axios.get(url).then(response => response.data.data);\n}\n\n\n\nexport {\n  getUsers,\n  getUser,\n  registerUser,\n  deleteUser,\n  logIn,\n  registerBmiDetail,\n  getBmi,\n  deleteBmi,\n};"]},"metadata":{},"sourceType":"module"}