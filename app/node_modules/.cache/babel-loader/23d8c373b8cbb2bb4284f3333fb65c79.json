{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\Chart.js\";\nimport axios from 'axios';\nimport React, { Component, useState, useEffect } from 'react';\nimport \"../styles.css\";\nimport SearchBar from 'search-bar-react';\nimport { getOrders } from \"../actions/actions\";\nimport { Line } from 'react-chartjs-2';\n\nclass MedicineChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  } //  function Chart(){\n  // const [chart, setChart] = useState({});\n  //fetchData()\n  // getOrders().then(res => res.json()).then((jsonarray) => {\n  //                     var labels = jsonarray.map(function(e) {\n  //                         console.log(e.medicineid);\n  //                         console.log(labels);\n  //                         return e.medicineid;\n  //                     });\n  // {chart &&\n  //     chart.map((book, index) => {\n  //                     })}\n  // const labels = chart.map(chart => {\n  //     console.log(chart.medicineid);\n  //    console.log(labels);\n  //  return chart.medicineid;\n  // });\n  //  const filtered = books.filter(book => {\n  //     console.log(books)\n  //     console.log(booksFiltered)\n  //     console.log(book)\n  //     console.log(book.name)\n  //     // {books &&\n  //     //     books.map((book, index) => {\n  //             return book.name.includes(input)\n  // })\n  // console.log(books)\n  //console.log(booksFiltered)\n  // console.log(response.data.authors)\n  // useEffect( () => {fetchData()},[]);\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      chartData: this.state.chartData,\n      location: \"Test\",\n      legendPosition: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }\n    })));\n  }\n\n}\n\nconst fetchData = () => {\n  const [chart, setChart] = useState([]);\n  getOrders().then(res => {\n    setChart({\n      res\n    });\n    console.log(res);\n    setChart(getOrders);\n    console.log(res);\n    const label = res.map((chart, index) => {\n      console.log(chart.medicinename);\n      return chart.medicinename;\n    });\n    const user = res.map((chart, index) => {\n      console.log(chart.userid);\n      return chart.userid;\n    });\n    console.log(label);\n    console.log(user); //  const datasets =  [{\n    //     label: \"My First dataset\",\n    //     data: [label,user],\n    //   }]   \n\n    const data = {\n      labels: [label],\n      datasets: [{\n        label: \"My First dataset\",\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: [user]\n      }]\n    };\n    console.log(\"got here\"); // console.log(datasets)\n\n    console.log(data);\n  });\n};\n\nexport default MedicineChart;","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/Chart.js"],"names":["axios","React","Component","useState","useEffect","SearchBar","getOrders","Line","MedicineChart","constructor","state","data","chartData","componentDidMount","fetchData","render","chart","setChart","then","res","console","log","label","map","index","medicinename","user","userid","labels","datasets","backgroundColor","borderColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,MAAMC,aAAN,SAA4BN,SAA5B,CAAqC;AACjCO,EAAAA,WAAW,GAAG;AACF;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE,EADC;AAEPC,MAAAA,SAAS,EAAC;AAFH,KAAX;AAMH;;AACDC,EAAAA,iBAAiB,GAAG;AACR,SAAKC,SAAL;AACH,GAZgB,CAcrC;AACI;AAKF;AAIM;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACG;AACC;AACD;AAGH;;;AAGJC,EAAAA,MAAM,GAAE;AACJ,wBAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACiB;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWE,SAA5B;AAAuC,MAAA,QAAQ,EAAC,MAAhD;AAAuD,MAAA,cAAc,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADjB,CAFJ;AASC;;AAtEgC;;AAyErC,MAAME,SAAS,GAAE,MAAM;AACnB,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACAG,EAAAA,SAAS,GAAGY,IAAZ,CAAkBC,GAAD,IAAQ;AACrBF,IAAAA,QAAQ,CAAC;AAACE,MAAAA;AAAD,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAGJF,IAAAA,QAAQ,CAACX,SAAD,CAAR;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,UAAMG,KAAK,GAAGH,GAAG,CAACI,GAAJ,CAAQ,CAACP,KAAD,EAAOQ,KAAP,KAAe;AAChCJ,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACS,YAAlB;AACA,aAAOT,KAAK,CAACS,YAAb;AACH,KAHY,CAAd;AAIC,UAAMC,IAAI,GAAGP,GAAG,CAACI,GAAJ,CAAQ,CAACP,KAAD,EAAOQ,KAAP,KAAe;AAChCJ,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACW,MAAlB;AACA,aAAOX,KAAK,CAACW,MAAb;AACH,KAHY,CAAb;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EAhByB,CAkBb;AACA;AACA;AACA;;AAEE,UAAMf,IAAI,GAAE;AACViB,MAAAA,MAAM,EAAE,CAACN,KAAD,CADE;AAEVO,MAAAA,QAAQ,EAAE,CAAC;AACTP,QAAAA,KAAK,EAAE,kBADE;AAETQ,QAAAA,eAAe,EAAE,mBAFR;AAGTC,QAAAA,WAAW,EAAE,mBAHJ;AAITpB,QAAAA,IAAI,EAAE,CAACe,IAAD;AAJG,OAAD;AAFA,KAAZ;AAUAN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAjCW,CAkCD;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACH,GApCrB;AAuCiB,CAzCrB;;AA2CA,eAAeH,aAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { Component,useState,useEffect } from 'react';\r\nimport \"../styles.css\";\r\nimport SearchBar from 'search-bar-react'\r\nimport { getOrders} from \"../actions/actions\";\r\nimport { Line } from 'react-chartjs-2';\r\nclass MedicineChart extends Component{\r\n    constructor() {\r\n                super();\r\n                this.state={\r\n                    data: [],\r\n                    chartData:{\r\n        \r\n                    }\r\n                }\r\n            }\r\n            componentDidMount() {\r\n                        this.fetchData();\r\n                    }\r\n    \r\n//  function Chart(){\r\n    // const [chart, setChart] = useState({});\r\n\r\n\r\n      \r\n\r\n  //fetchData()\r\n\r\n  \r\n      \r\n        // getOrders().then(res => res.json()).then((jsonarray) => {\r\n        //                     var labels = jsonarray.map(function(e) {\r\n        //                         console.log(e.medicineid);\r\n        //                         console.log(labels);\r\n        //                         return e.medicineid;\r\n        //                     });\r\n    \r\n\r\n        // {chart &&\r\n        //     chart.map((book, index) => {\r\n        //                     })}\r\n        // const labels = chart.map(chart => {\r\n        //     console.log(chart.medicineid);\r\n        //    console.log(labels);\r\n        //  return chart.medicineid;\r\n        // });\r\n     \r\n     \r\n    //  const filtered = books.filter(book => {\r\n    //     console.log(books)\r\n    //     console.log(booksFiltered)\r\n    //     console.log(book)\r\n    //     console.log(book.name)\r\n    //     // {books &&\r\n    //     //     books.map((book, index) => {\r\n        \r\n    //             return book.name.includes(input)\r\n    // })\r\n       // console.log(books)\r\n        //console.log(booksFiltered)\r\n       // console.log(response.data.authors)\r\n    \r\n  \r\n    // useEffect( () => {fetchData()},[]);\r\n    \r\n\r\nrender(){\r\n    return (\r\n        \r\n        <div className=\"App\">\r\n                         <header className=\"App-header\">\r\n        \r\n                           <Line chartData={this.state.chartData} location=\"Test\" legendPosition=\"bottom\"/>\r\n                         </header>\r\n                  </div>\r\n      );\r\n    }\r\n}\r\n    \r\nconst fetchData =() => {\r\n    const [chart, setChart] = useState([]);\r\n    getOrders().then((res) =>{\r\n        setChart({res});\r\n        console.log(res);\r\n    \r\n\r\n    setChart(getOrders)\r\n    console.log(res);\r\n   const label = res.map((chart,index)=>{\r\n        console.log(chart.medicinename)\r\n        return chart.medicinename;\r\n    })\r\n    const user = res.map((chart,index)=>{\r\n        console.log(chart.userid)\r\n        return chart.userid;\r\n    })\r\n    console.log(label)\r\n    console.log(user)\r\n\r\n                //  const datasets =  [{\r\n                //     label: \"My First dataset\",\r\n                //     data: [label,user],\r\n                //   }]   \r\n\r\n                  const data= {\r\n                    labels: [label],\r\n                    datasets: [{\r\n                      label: \"My First dataset\",\r\n                      backgroundColor: 'rgb(255, 99, 132)',\r\n                      borderColor: 'rgb(255, 99, 132)',\r\n                      data: [user],\r\n                    }]\r\n                  }\r\n                            \r\n                  console.log(\"got here\")\r\n                            // console.log(datasets)\r\n                            console.log(data)\r\n                        });\r\n                        \r\n                       \r\n                    }\r\n\r\nexport default MedicineChart;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}