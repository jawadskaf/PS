{"ast":null,"code":"var _jsxFileName = \"D:\\\\PS\\\\PS\\\\app\\\\src\\\\components\\\\HomePage.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Container, Header, Menu, Segment, Dropdown } from \"semantic-ui-react\";\nimport { feedback } from \"../actions/actions\";\nimport actions from '../redux/actions/feedbackk';\nimport \"../App2.css\";\nimport { Form, FormTextArea, FormGroup, FormControl, ControlLabel, Col } from \"react-bootstrap\";\n\nclass HomepageLayout extends Component {\n  constructor() {\n    super();\n\n    this.FeedbackClickHandler = () => {\n      const {\n        feedbackid\n      } = this.state;\n      const {\n        feedback\n      } = this.state;\n      let data = {\n        feedbackid: feedbackid,\n        feedback: feedback\n      };\n      this.props.dispatch(actions.feedback(data));\n\n      if (this.props.createMessage) {\n        alert(\"feedback Added\");\n        this.redirectToHome();\n      } else {\n        alert(\"Couldnt add feedback\");\n      }\n    };\n\n    this.handleFedbackChange = event => {\n      event.preventDefault();\n      this.setState({\n        feedback: event.target.value\n      });\n    };\n\n    this.redirectToHome = () => {\n      const {\n        history\n      } = this.props;\n      if (history) history.push('/');\n    };\n\n    this.state = {\n      feedbackid: \"\",\n      feedback: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.body.style = 'background: rgb(51, 51, 51);';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  feedback: state.feedbackReducer.feedback,\n  createMessage: state.feedbackReducer.createMessage\n});\n\nexport default connect(mapStateToProps)(HomepageLayout);","map":{"version":3,"sources":["D:/PS/PS/app/src/components/HomePage.js"],"names":["React","Component","connect","Button","Container","Header","Menu","Segment","Dropdown","feedback","actions","Form","FormTextArea","FormGroup","FormControl","ControlLabel","Col","HomepageLayout","constructor","FeedbackClickHandler","feedbackid","state","data","props","dispatch","createMessage","alert","redirectToHome","handleFedbackChange","event","preventDefault","setState","target","value","history","push","componentDidMount","document","body","style","render","mapStateToProps","feedbackReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kCAAP;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,MAA5B,EAAoCC,IAApC,EAA0CC,OAA1C,EAAmDC,QAAnD,QAAmE,mBAAnE;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAO,aAAP;AACA,SAASC,IAAT,EAAeC,YAAf,EAA4BC,SAA5B,EAAuCC,WAAvC,EAAoDC,YAApD,EAAkEC,GAAlE,QAA6E,iBAA7E;;AAEA,MAAMC,cAAN,SAA6BhB,SAA7B,CAAuC;AACrCiB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYhBC,oBAZgB,GAYO,MACnB;AACG,YAAM;AAACC,QAAAA;AAAD,UAAe,KAAKC,KAA1B;AACA,YAAM;AAACZ,QAAAA;AAAD,UAAa,KAAKY,KAAxB;AAGA,UAAIC,IAAI,GAAG;AACPF,QAAAA,UAAU,EAAEA,UADL;AAEPX,QAAAA,QAAQ,EAACA;AAFF,OAAX;AAKA,WAAKc,KAAL,CAAWC,QAAX,CAAoBd,OAAO,CAACD,QAAR,CAAiBa,IAAjB,CAApB;;AACA,UAAG,KAAKC,KAAL,CAAWE,aAAd,EAA4B;AACxBC,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACA,aAAKC,cAAL;AACH,OAHD,MAIK;AACDD,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AACH,KA/BW;;AAAA,SAiCZE,mBAjCY,GAiCWC,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAAEtB,QAAAA,QAAQ,EAAEoB,KAAK,CAACG,MAAN,CAAaC;AAAzB,OAAd;AACH,KApCa;;AAAA,SAsCdN,cAtCc,GAsCG,MAAM;AACrB,YAAM;AAAEO,QAAAA;AAAF,UAAc,KAAKX,KAAzB;AACA,UAAGW,OAAH,EAAYA,OAAO,CAACC,IAAR,CAAa,GAAb;AACb,KAzCa;;AAEZ,SAAKd,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,EADD;AAETX,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAKH;;AACI2B,EAAAA,iBAAiB,GAAG;AACrBC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,GAAsB,8BAAtB;AACH;;AAiCCC,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAQD;;AArDoC;;AAwDvC,MAAMC,eAAe,GAAGpB,KAAK,KAAI;AAC/BZ,EAAAA,QAAQ,EAAEY,KAAK,CAACqB,eAAN,CAAsBjC,QADD;AAE/BgB,EAAAA,aAAa,EAAEJ,KAAK,CAACqB,eAAN,CAAsBjB;AAFN,CAAJ,CAA7B;;AAKA,eAAevB,OAAO,CAACuC,eAAD,CAAP,CAAyBxB,cAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport { Button, Container, Header, Menu, Segment, Dropdown } from \"semantic-ui-react\";\r\nimport { feedback } from \"../actions/actions\";\r\nimport actions from '../redux/actions/feedbackk';\r\nimport \"../App2.css\";\r\nimport { Form, FormTextArea,FormGroup, FormControl, ControlLabel, Col } from \"react-bootstrap\";\r\n\r\nclass HomepageLayout extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feedbackid: \"\",\r\n        feedback:\"\",\r\n\r\n    };\r\n}\r\n     componentDidMount() {\r\n    document.body.style = 'background: rgb(51, 51, 51);';\r\n}\r\n\r\nFeedbackClickHandler = () =>\r\n    {\r\n       const {feedbackid} = this.state;\r\n       const {feedback} = this.state;\r\n       \r\n      \r\n       let data = {\r\n           feedbackid: feedbackid,\r\n           feedback:feedback,\r\n           \r\n       }\r\n       this.props.dispatch(actions.feedback(data));\r\n       if(this.props.createMessage){\r\n           alert(\"feedback Added\");\r\n           this.redirectToHome()\r\n       }\r\n       else {\r\n           alert(\"Couldnt add feedback\")\r\n       }\r\n    };\r\n\r\n    handleFedbackChange = (event) => {\r\n      event.preventDefault();\r\n      this.setState({ feedback: event.target.value });\r\n  };\r\n\r\n  redirectToHome = () => {\r\n    const { history } = this.props;\r\n    if(history) history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        \r\n  \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  feedback: state.feedbackReducer.feedback,\r\n  createMessage: state.feedbackReducer.createMessage,\r\n})\r\n\r\nexport default connect(mapStateToProps)(HomepageLayout);"]},"metadata":{},"sourceType":"module"}