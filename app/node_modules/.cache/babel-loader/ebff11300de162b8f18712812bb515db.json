{"ast":null,"code":"import { getOrders, deleteMedOrder, addMedOrder, updateMedOrder } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_MEDS_STARTED = 'GET_MEDS_STARTED';\nexport const GET_MEDS_SUCCESS = 'GET_MEDS_SUCCESS';\nexport const GET_MEDS_ERROR = 'GET_MEDS_ERROR';\nexport const CREATE_MEDS_STARTED = 'CREATE_MEDS_STARTED';\nexport const CREATE_MEDS_SUCCESS = 'CREATE_MEDS_SUCCESS';\nexport const CREATE_MEDS_ERROR = 'CREATE_MEDS_ERROR';\nexport const DELETE_MEDS_SUCCESS = 'DELETE_MEDS_SUCCESS';\nexport const DELETE_MEDS_STARTED = 'DELETE_MEDS_STARTED';\nexport const DELETE_MEDS_ERROR = 'DELETE_MEDS_ERROR';\nexport const UPDATE_MEDS_SUCCESS = 'UPDATE_MEDS_SUCCESS';\nexport const UPDATE_MEDS_STARTED = 'UPDATE_MEDS_STARTED';\nexport const UPDATE_MEDS_ERROR = 'UPDATE_MEDS_ERROR';\nconst medsActions = {\n  getOrders: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_MEDS_STARTED\n      });\n      let response = await getOrders();\n      dispatch({\n        type: GET_MEDS_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING MEDS' + error);\n      dispatch({\n        type: GET_MEDS_ERROR\n      });\n    }\n  },\n  deleteMedOrder: data => async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_MEDS_STARTED\n      });\n      await deleteMedOrder(data);\n      dispatch({\n        type: DELETE_MEDS_SUCCESS,\n        payload: {\n          message: 'MEDS deleted successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_MEDS_ERROR\n      });\n    }\n  },\n  addMedOrder: data => async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_MEDS_STARTED\n      });\n      await addMedOrder(data);\n      dispatch({\n        type: CREATE_MEDS_SUCCESS,\n        payload: {\n          message: 'MEDS added successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: CREATE_MEDS_ERROR,\n        payload: {\n          message: 'failed to add MEDS!'\n        }\n      });\n    }\n  },\n  updateMedOrder: data => async dispatch => {\n    try {\n      dispatch({\n        type: UPDATE_MEDS_STARTED\n      });\n      await updateMedOrder(data);\n      dispatch({\n        type: UPDATE_MEDS_SUCCESS,\n        payload: {\n          message: 'MEDS updated successfully'\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: UPDATE_MEDS_ERROR,\n        payload: {\n          message: 'failed to update MEDS!'\n        }\n      });\n    }\n  }\n};\nexport default medsActions;","map":{"version":3,"sources":["D:/PS/PS/app/src/redux/actions/medicine.js"],"names":["getOrders","deleteMedOrder","addMedOrder","updateMedOrder","toast","GET_MEDS_STARTED","GET_MEDS_SUCCESS","GET_MEDS_ERROR","CREATE_MEDS_STARTED","CREATE_MEDS_SUCCESS","CREATE_MEDS_ERROR","DELETE_MEDS_SUCCESS","DELETE_MEDS_STARTED","DELETE_MEDS_ERROR","UPDATE_MEDS_SUCCESS","UPDATE_MEDS_STARTED","UPDATE_MEDS_ERROR","medsActions","dispatch","type","response","payload","data","error","message","err"],"mappings":"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","sourcesContent":["import { getOrders, deleteMedOrder, addMedOrder,updateMedOrder } from '../../actions/actions';\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const GET_MEDS_STARTED = 'GET_MEDS_STARTED'\r\nexport const GET_MEDS_SUCCESS = 'GET_MEDS_SUCCESS'\r\nexport const GET_MEDS_ERROR = 'GET_MEDS_ERROR'\r\n\r\nexport const CREATE_MEDS_STARTED = 'CREATE_MEDS_STARTED'\r\nexport const CREATE_MEDS_SUCCESS = 'CREATE_MEDS_SUCCESS'\r\nexport const CREATE_MEDS_ERROR = 'CREATE_MEDS_ERROR'\r\n\r\nexport const DELETE_MEDS_SUCCESS = 'DELETE_MEDS_SUCCESS'\r\nexport const DELETE_MEDS_STARTED = 'DELETE_MEDS_STARTED'\r\nexport const DELETE_MEDS_ERROR = 'DELETE_MEDS_ERROR'\r\n\r\nexport const UPDATE_MEDS_SUCCESS = 'UPDATE_MEDS_SUCCESS'\r\nexport const UPDATE_MEDS_STARTED = 'UPDATE_MEDS_STARTED'\r\nexport const UPDATE_MEDS_ERROR = 'UPDATE_MEDS_ERROR'\r\n\r\nconst medsActions = {\r\n\r\n  getOrders: () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_MEDS_STARTED,\r\n      });\r\n      let response = await getOrders()\r\n      dispatch({\r\n        type: GET_MEDS_SUCCESS,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      toast.error('ERROR GETTING MEDS' + error)\r\n      dispatch({\r\n        type: GET_MEDS_ERROR,\r\n      });\r\n    }\r\n  },\r\n  deleteMedOrder: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: DELETE_MEDS_STARTED,\r\n      });\r\n      await deleteMedOrder(data);\r\n      dispatch({\r\n        type: DELETE_MEDS_SUCCESS,\r\n        payload: {\r\n          message: 'MEDS deleted successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DELETE_MEDS_ERROR,\r\n      })\r\n    }\r\n  },\r\n  addMedOrder: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_MEDS_STARTED,\r\n      });\r\n      await addMedOrder(data);\r\n      dispatch({\r\n        type: CREATE_MEDS_SUCCESS,\r\n        payload: {\r\n          message: 'MEDS added successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CREATE_MEDS_ERROR,\r\n        payload: {\r\n          message: 'failed to add MEDS!',\r\n        }\r\n      })\r\n    }\r\n  },\r\n  updateMedOrder: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: UPDATE_MEDS_STARTED,\r\n      });\r\n      await updateMedOrder(data);\r\n      dispatch({\r\n        type: UPDATE_MEDS_SUCCESS,\r\n        payload: {\r\n          message: 'MEDS updated successfully',\r\n        }\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_MEDS_ERROR,\r\n        payload: {\r\n          message: 'failed to update MEDS!',\r\n        }\r\n      })\r\n    }\r\n  }\r\n};\r\n\r\nexport default medsActions;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}