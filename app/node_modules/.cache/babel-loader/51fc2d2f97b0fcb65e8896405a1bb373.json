{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\Chart.js\";\nimport axios from 'axios';\nimport React, { Component, useState, useEffect } from 'react';\nimport \"../styles.css\";\nimport SearchBar from 'search-bar-react';\nimport { getOrders } from \"../actions/actions\";\nimport { Line } from 'react-chartjs-2';\nimport { render } from 'react-dom';\nconst [chart, setChart] = useState({});\n\nclass MedicineChart extends Component {\n  constructor() {\n    super();\n\n    this.getchartData = () => {\n      getOrders().then(res => {\n        setChart({\n          res\n        });\n        console.log(res);\n        setChart(getOrders);\n        console.log(res);\n        var label = res.map((chart, index) => {\n          console.log(chart.medicinename);\n          return chart.medicinename;\n        });\n        var user = res.map((chart, index) => {\n          console.log(chart.userid);\n          return chart.userid;\n        });\n        console.log(label);\n        console.log(user);\n        this.setState({\n          chartData: {\n            label: label,\n            datasets: [{\n              label: 'Chart',\n              data: user\n            }]\n          }\n        }); //   const data= {\n        //     labels: [label],\n        //     datasets: [{\n        //       label: \"My First dataset\",\n        //       backgroundColor: 'rgb(255, 99, 132)',\n        //       borderColor: 'rgb(255, 99, 132)',\n        //       data: [user],\n        //     }]\n        //   }\n\n        console.log(\"got here\"); // console.log(datasets)\n        // console.log(data)\n        // console.log(chartData)\n      }); //fetchData()\n      // function fetchData () {\n      //     getOrders().then((res) =>{\n      //         setChart({res});\n      //         console.log(res);\n      //     setChart(getOrders)\n      //     console.log(res);\n      //    const label = res.map((chart,index)=>{\n      //         console.log(chart.medicinename)\n      //         return chart.medicinename;\n      //     })\n      //     const user = res.map((chart,index)=>{\n      //         console.log(chart.userid)\n      //         return chart.userid;\n      //     })\n      //     console.log(label)\n      //     console.log(user)\n      //                  const datasets =  [{\n      //                     label: \"My First dataset\",\n      //                     data: [label,user],\n      //                   }]   \n      //                   const data= {\n      //                     labels: [label],\n      //                     datasets: [{\n      //                       label: \"My First dataset\",\n      //                       backgroundColor: 'rgb(255, 99, 132)',\n      //                       borderColor: 'rgb(255, 99, 132)',\n      //                       data: [user],\n      //                     }]\n      //                   }\n      //                   console.log(\"got here\")\n      //                             console.log(datasets)\n      //                             console.log(data)\n      //                         });\n      // getOrders().then(res => res.json()).then((jsonarray) => {\n      //                     var labels = jsonarray.map(function(e) {\n      //                         console.log(e.medicineid);\n      //                         console.log(labels);\n      //                         return e.medicineid;\n      //                     });\n      // {chart &&\n      //     chart.map((book, index) => {\n      //                     })}\n      // const labels = chart.map(chart => {\n      //     console.log(chart.medicineid);\n      //    console.log(labels);\n      //  return chart.medicineid;\n      // });\n      //  const filtered = books.filter(book => {\n      //     console.log(books)\n      //     console.log(booksFiltered)\n      //     console.log(book)\n      //     console.log(book.name)\n      //     // {books &&\n      //     //     books.map((book, index) => {\n      //             return book.name.includes(input)\n      // })\n      // console.log(books)\n      //console.log(booksFiltered)\n      // console.log(response.data.authors)\n      // }\n      // useEffect( () => {fetchData()},[]);\n    };\n\n    this.state = {\n      data: [],\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getchartData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      chartData: this.state.chartData,\n      location: \"Test\",\n      legendPosition: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 28\n      }\n    })));\n  }\n\n}\n\nexport default MedicineChart;","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/Chart.js"],"names":["axios","React","Component","useState","useEffect","SearchBar","getOrders","Line","render","chart","setChart","MedicineChart","constructor","getchartData","then","res","console","log","label","map","index","medicinename","user","userid","setState","chartData","datasets","data","state","componentDidMount"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { Component,useState,useEffect } from 'react';\r\nimport \"../styles.css\";\r\nimport SearchBar from 'search-bar-react'\r\nimport { getOrders} from \"../actions/actions\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport { render } from 'react-dom';\r\nconst [chart, setChart] = useState({});\r\nclass MedicineChart extends Component{\r\n\r\n        constructor() {\r\n            super();\r\n            this.state={\r\n                data: [],\r\n                chartData:{\r\n    \r\n                }\r\n            }\r\n        }\r\n    \r\n    \r\n        componentDidMount() {\r\n            this.getchartData();\r\n        }\r\ngetchartData = () =>{\r\n    \r\n    getOrders().then((res) =>{\r\n        setChart({res});\r\n        console.log(res);\r\n    \r\n\r\n    setChart(getOrders)\r\n    console.log(res);\r\n   var label = res.map((chart,index)=>{\r\n        console.log(chart.medicinename)\r\n        return chart.medicinename;\r\n    })\r\n    var user = res.map((chart,index)=>{\r\n        console.log(chart.userid)\r\n        return chart.userid;\r\n    })\r\n    console.log(label)\r\n    console.log(user)\r\n\r\n\r\n    this.setState({\r\n                            chartData:{\r\n                                label:label,\r\n                                datasets:[\r\n                                    {\r\n                                        label:'Chart',\r\n                                        data:user\r\n                                    }\r\n                                ]\r\n                            }\r\n                        });\r\n\r\n                //   const data= {\r\n                //     labels: [label],\r\n                //     datasets: [{\r\n                //       label: \"My First dataset\",\r\n                //       backgroundColor: 'rgb(255, 99, 132)',\r\n                //       borderColor: 'rgb(255, 99, 132)',\r\n                //       data: [user],\r\n                //     }]\r\n                //   }\r\n                            \r\n                  console.log(\"got here\")\r\n                            // console.log(datasets)\r\n                            // console.log(data)\r\n                            // console.log(chartData)\r\n                        });\r\n\r\n      \r\n\r\n  //fetchData()\r\n\r\n  \r\n    // function fetchData () {\r\n    //     getOrders().then((res) =>{\r\n    //         setChart({res});\r\n    //         console.log(res);\r\n        \r\n\r\n    //     setChart(getOrders)\r\n    //     console.log(res);\r\n    //    const label = res.map((chart,index)=>{\r\n    //         console.log(chart.medicinename)\r\n    //         return chart.medicinename;\r\n    //     })\r\n    //     const user = res.map((chart,index)=>{\r\n    //         console.log(chart.userid)\r\n    //         return chart.userid;\r\n    //     })\r\n    //     console.log(label)\r\n    //     console.log(user)\r\n   \r\n    //                  const datasets =  [{\r\n    //                     label: \"My First dataset\",\r\n    //                     data: [label,user],\r\n    //                   }]   \r\n\r\n    //                   const data= {\r\n    //                     labels: [label],\r\n    //                     datasets: [{\r\n    //                       label: \"My First dataset\",\r\n    //                       backgroundColor: 'rgb(255, 99, 132)',\r\n    //                       borderColor: 'rgb(255, 99, 132)',\r\n    //                       data: [user],\r\n    //                     }]\r\n    //                   }\r\n                                \r\n    //                   console.log(\"got here\")\r\n    //                             console.log(datasets)\r\n    //                             console.log(data)\r\n    //                         });\r\n                            \r\n                           \r\n\r\n        // getOrders().then(res => res.json()).then((jsonarray) => {\r\n        //                     var labels = jsonarray.map(function(e) {\r\n        //                         console.log(e.medicineid);\r\n        //                         console.log(labels);\r\n        //                         return e.medicineid;\r\n        //                     });\r\n    \r\n\r\n        // {chart &&\r\n        //     chart.map((book, index) => {\r\n        //                     })}\r\n        // const labels = chart.map(chart => {\r\n        //     console.log(chart.medicineid);\r\n        //    console.log(labels);\r\n        //  return chart.medicineid;\r\n        // });\r\n     \r\n     \r\n    //  const filtered = books.filter(book => {\r\n    //     console.log(books)\r\n    //     console.log(booksFiltered)\r\n    //     console.log(book)\r\n    //     console.log(book.name)\r\n    //     // {books &&\r\n    //     //     books.map((book, index) => {\r\n        \r\n    //             return book.name.includes(input)\r\n    // })\r\n       // console.log(books)\r\n        //console.log(booksFiltered)\r\n       // console.log(response.data.authors)\r\n    // }\r\n  \r\n    // useEffect( () => {fetchData()},[]);\r\n                    }\r\nrender(){\r\n    return (\r\n        \r\n        <div className=\"App\">\r\n                         <header className=\"App-header\">\r\n        \r\n                           <Line chartData={this.state.chartData} location=\"Test\" legendPosition=\"bottom\"/>\r\n                         </header>\r\n                  </div>\r\n      );\r\n    \r\n    \r\n}\r\n}\r\n\r\nexport default MedicineChart;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}