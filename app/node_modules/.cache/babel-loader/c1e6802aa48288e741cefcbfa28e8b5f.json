{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"../styles.css\";\nimport { getOrders } from \"../actions/actions\";\nimport { Line, Chart, Doughnut, Bar, HorizontalBar } from 'react-chartjs-2'; // import Chart from 'react-native-chart';\n\nimport { render } from 'react-dom';\nimport '../App.css'; // import { ChartControl } from \"@pnp/spfx-controls-react/lib/ChartControl\";\n\nfunction ChartMed() {\n  const [chart, setChart] = useState({});\n  const [data, setData] = useState({});\n  console.log(\"heyy\");\n  console.log(data);\n\n  function fetchData() {\n    getOrders().then(res => {\n      setChart({\n        res\n      });\n      console.log(res);\n      setChart(getOrders);\n      console.log(res);\n      const label = res.map((chart, index) => {\n        console.log(chart.medicinename);\n        return chart.medicinename;\n      });\n      const user = res.map((chart, index) => {\n        console.log(chart.userid);\n        return chart.userid;\n      });\n      const medid = res.map((chart, index) => {\n        console.log(chart.medicineid);\n        return chart.medicineid;\n      });\n      console.log(label);\n      console.log(user);\n      setData({\n        labels: [label],\n        datasets: [{\n          label: \"User Data \",\n          backgroundColor: 'rgb(255, 99, 132)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: [user]\n        }, {\n          backgroundColor: 'rgb(99, 255, 132)',\n          borderColor: 'rgb(255, 132, 99)',\n          label: \"Med id\",\n          data: [medid]\n        }]\n      });\n      console.log(\"got here\");\n      console.log(data);\n      console.log(\"end\");\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(HorizontalBar, {\n    rootProps: {\n      'data-testid': '1'\n    },\n    type: \"line\",\n    data: data,\n    location: \"Test\",\n    legendPosition: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }\n  })));\n}\n\nexport default ChartMed;","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/Chart.js"],"names":["React","useState","useEffect","getOrders","Line","Chart","Doughnut","Bar","HorizontalBar","render","ChartMed","chart","setChart","data","setData","console","log","fetchData","then","res","label","map","index","medicinename","user","userid","medid","medicineid","labels","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport \"../styles.css\";\r\nimport { getOrders} from \"../actions/actions\";\r\nimport { Line,Chart,Doughnut, Bar, HorizontalBar } from 'react-chartjs-2';\r\n// import Chart from 'react-native-chart';\r\nimport { render } from 'react-dom';\r\nimport '../App.css';\r\n// import { ChartControl } from \"@pnp/spfx-controls-react/lib/ChartControl\";\r\nfunction ChartMed(){\r\n   \r\n    const [chart, setChart] = useState({});\r\n    const [data,setData] = useState({});\r\n  console.log(\"heyy\")\r\n  console.log(data)\r\n\r\n  \r\n    function fetchData () {\r\n        \r\n        getOrders().then((res) =>{\r\n            setChart({res});\r\n            console.log(res);\r\n        \r\n\r\n        setChart(getOrders)\r\n        console.log(res);\r\n       const label = res.map((chart,index)=>{\r\n            console.log(chart.medicinename)\r\n            return chart.medicinename;\r\n        })\r\n        const user = res.map((chart,index)=>{\r\n            console.log(chart.userid)\r\n            return chart.userid;\r\n        })\r\n        const medid = res.map((chart,index)=>{\r\n            console.log(chart.medicineid)\r\n            return chart.medicineid;\r\n        })\r\n        console.log(label)\r\n        console.log(user)\r\n   \r\n                      setData({\r\n                        labels: [label],\r\n                        datasets: [{\r\n                          label: \"User Data \",\r\n                          \r\n                          backgroundColor: 'rgb(255, 99, 132)',\r\n                          borderColor: 'rgb(255, 99, 132)',\r\n                          data: [user]\r\n                          \r\n                        }, {\r\n                            \r\n                            backgroundColor: 'rgb(99, 255, 132)',\r\n                          borderColor: 'rgb(255, 132, 99)',\r\n                            label: \"Med id\",\r\n                            \r\n                            data: [medid]\r\n                            \r\n                        }\r\n                    ]\r\n                      }\r\n                      )\r\n                                \r\n                                console.log(\"got here\")\r\n                                console.log(data)\r\n                                console.log(\"end\")\r\n                                \r\n                            });\r\n    \r\n    }\r\n  \r\n    useEffect( () => {fetchData()},[]);\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n                         <header className=\"container\">\r\n        \r\n                           <HorizontalBar\r\n                           \r\n                          rootProps={{ 'data-testid': '1' }} \r\n                          \r\n                           type=\"line\" data={data} location=\"Test\" legendPosition=\"bottom\"/>\r\n                      \r\n                         </header>\r\n                         \r\n                  </div>\r\n      );\r\n\r\n    \r\n}\r\n\r\n\r\nexport default ChartMed;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}