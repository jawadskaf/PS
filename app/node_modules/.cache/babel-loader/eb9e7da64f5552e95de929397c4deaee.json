{"ast":null,"code":"// import React, { Component } from 'react';\n// import { getUsers } from \"../actions/actions\";\n// import { deleteUser } from \"../actions/actions\";\n// import {Link} from 'react-router-dom'\n// class myProfilePage extends Component {\n//     constructor(){\n//         super();\n//         this.deleteRecord = this.deleteRecord.bind(this);\n//         this.fillForm = this.fillForm.bind(this);\n//         this.state = {\n//           data: []\n//         };\n//     }\n//     componentDidMount() {\n//         this.retrieveUsers();\n//     }\n//     retrieveUsers = () => {\n//         getUsers().then((res) =>{\n//         this.setState({data: res});\n//         console.log(res);\n//     });\n// }\n// addRecord = () => event => {\n//     event.preventDefault();\n//     this.props.history.push(\"/UserForm\");\n//   };\n// deleteRecord = (event) => {\n//     event.preventDefault();\n//     let userid = event.target.id;\n//     console.log(userid);\n//     deleteUser(userid).then(res=>{\n//         alert(\"user deleted\");\n//     }).catch(err=>{\n//         alert(\"error deleting\");\n//     });\n// };\n// // deleteRecord = event => {\n// //   event.preventDefault();\n// //   let url = \"http://localhost:3001/deleteUser\";\n// //   fetch(url, {\n// //     method: \"POST\",\n// //     headers: {\n// //       \"Content-Type\": \"application/json\"\n// //     },\n// //     body: JSON.stringify({\n// //       userid: event.target.id\n// //     })\n// //   })\n// //     .then(response => response.json())\n// //     .then(responseJson => {\n// //       alert(responseJson.value);\n// //       this.fetchUsers();\n// //     })\n// //     .catch(error => {\n// //       alert(\"Failed to Save.\");\n// //     });\n// // };\n// // deleteRecord = (event) => {\n// //     event.preventDefault();\n// //     let url = 'http://localhost:3001/deleteUser';\n// //     fetch(url, {\n// //       method: 'POST',\n// //       headers: {\n// //         'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({\n// //           userid: event.target.userid,\n// //         })\n// // }).then((response) => response.json())\n// //       .then((responseJson) => {\n// //         alert(responseJson.value);\n// //         this.fetchUsers();\n// //       }).catch((error) => {\n// //         alert('Failed to Save.');\n// //       });\n// //   }\n//   fillForm = item => event => {\n//     event.preventDefault();\n//     this.props.history.push(\"/UserForm\", {\n//       userid: item.userid,\n//       username: item.username,\n//       password: item.password,\n//       age: item.age,\n//       adress: item.address,\n//       email: item.email,\n//       phonenumber: item.phonenumber\n//     });\n//   }\n//     // RegisterClickHandler = () =>\n//     // {\n//     //    const {userid} = this.state;\n//     //    const {username} = this.state;\n//     //    const {password} = this.state;\n//     //    const {age} = this.state;\n//     //    const {address} = this.state;\n//     //    const {email} = this.state; \n//     //    const {phonenumber} = this.state;\n//     //    let data = {\n//     //        userid: userid,\n//     //        username: username,\n//     //        password: password,\n//     //        age: age,\n//     //        address: address,\n//     //        email: email,\n//     //        phonenumber: phonenumber,\n//     //    }\n//     //    registerUser(data).then((res) =>{\n//     //         try{\n//     //             this.props.history.push(\"/\");\n//     //         }catch(error){\n//     //             console.log(\"Error while registrating\" + error);\n//     //             // return;\n//     //         }\n//     //    })\n//     // };\n//     render() {\n//         let rows = [];\n//         const contents = this.state.data.forEach((item, key) => {\n//           if(key % 2 === 0)\n//           {\n//             rows.push(\n//               <thead>\n//             <tr className='bg-secondary text-white'>\n//             <td>{item.userid}</td>\n//             <td>{item.username}</td>\n//             <td>{item.password}</td>\n//             <td>{item.age}</td>\n//             <td>{item.address}</td>\n//             <td>{item.email}</td>\n//             <td>{item.phonenumber}</td>\n//             <td><button onClick={this.fillForm(item)}>Edit</button></td>\n//             <td><button id={item.userid} onClick={this.deleteRecord}>Delete</button></td>\n//             </tr>\n//             </thead>\n//             );\n//           }else{\n//             rows.push(\n//             <thead>\n//             <tr className='bg-dark text-light'>\n//             <td>{item.userid}</td>\n//             <td>{item.username}</td>\n//             <td>{item.password}</td>\n//             <td>{item.age}</td>\n//             <td>{item.address}</td>\n//             <td>{item.email}</td>\n//             <td>{item.phonenumber}</td>\n//             <td><button className=\"btn bg-info\" onClick={this.fillForm(item)}>Edit</button></td>\n//             <td><button id={item.userid} onClick={this.deleteRecord}>Delete</button></td>\n//             </tr>\n//             </thead>\n//             );\n//           }\n//      })\n//         return (\n//           <div className=\"container\">\n//             <Link to=\"/Home\">\n//         <img src=\"pharmacylogo.png\" width=\"20%\" height=\"20%\" className=\"d-inline-block align-top\" alt=\"\"></img>\n//     </Link>\n//             <table className=\"table table-striped\">\n//               <thead>\n//               <tr className='Table-header'>\n//                 <th>userid</th>\n//                 <th>Name</th>\n//                 <th>Password</th>\n//                 <th>Age</th>\n//                 <th>Address</th>\n//                 <th>Email</th>\n//                 <th>Phonenumber</th>\n//                 <th>Edit</th>\n//                 <th>Delete</th>\n//               </tr>\n//               </thead>\n//               {rows}\n//             </table>\n//                        <Link to='/registration'>\n//                          <button type=\"button\" className=\"btn btn-dark btn-lg btn-block\">Add user</button>\n//                        </Link>\n//             <div className=\"row\">\n//             </div>\n//           </div>\n//         );\n//       }\n// }\n// export default myProfilePage;","map":{"version":3,"sources":["D:/BMI/bmi-app/src/components/MyProfile.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\r\n// import { getUsers } from \"../actions/actions\";\r\n// import { deleteUser } from \"../actions/actions\";\r\n// import {Link} from 'react-router-dom'\r\n\r\n// class myProfilePage extends Component {\r\n//     constructor(){\r\n//         super();\r\n//         this.deleteRecord = this.deleteRecord.bind(this);\r\n//         this.fillForm = this.fillForm.bind(this);\r\n//         this.state = {\r\n//           data: []\r\n//         };\r\n//     }\r\n   \r\n//     componentDidMount() {\r\n//         this.retrieveUsers();\r\n//     }\r\n\r\n//     retrieveUsers = () => {\r\n//         getUsers().then((res) =>{\r\n//         this.setState({data: res});\r\n//         console.log(res);\r\n//     });\r\n// }\r\n\r\n// addRecord = () => event => {\r\n//     event.preventDefault();\r\n//     this.props.history.push(\"/UserForm\");\r\n//   };\r\n\r\n// deleteRecord = (event) => {\r\n//     event.preventDefault();\r\n//     let userid = event.target.id;\r\n//     console.log(userid);\r\n//     deleteUser(userid).then(res=>{\r\n//         alert(\"user deleted\");\r\n//     }).catch(err=>{\r\n//         alert(\"error deleting\");\r\n//     });\r\n// };\r\n\r\n// // deleteRecord = event => {\r\n// //   event.preventDefault();\r\n\r\n// //   let url = \"http://localhost:3001/deleteUser\";\r\n// //   fetch(url, {\r\n// //     method: \"POST\",\r\n// //     headers: {\r\n// //       \"Content-Type\": \"application/json\"\r\n// //     },\r\n// //     body: JSON.stringify({\r\n// //       userid: event.target.id\r\n// //     })\r\n// //   })\r\n// //     .then(response => response.json())\r\n// //     .then(responseJson => {\r\n// //       alert(responseJson.value);\r\n// //       this.fetchUsers();\r\n// //     })\r\n// //     .catch(error => {\r\n// //       alert(\"Failed to Save.\");\r\n// //     });\r\n// // };\r\n\r\n\r\n\r\n\r\n// // deleteRecord = (event) => {\r\n// //     event.preventDefault();\r\n// //     let url = 'http://localhost:3001/deleteUser';\r\n// //     fetch(url, {\r\n// //       method: 'POST',\r\n// //       headers: {\r\n// //         'Content-Type': 'application/json',\r\n// //         },\r\n// //         body: JSON.stringify({\r\n// //           userid: event.target.userid,\r\n// //         })\r\n// // }).then((response) => response.json())\r\n// //       .then((responseJson) => {\r\n\r\n// //         alert(responseJson.value);\r\n// //         this.fetchUsers();\r\n\r\n// //       }).catch((error) => {\r\n// //         alert('Failed to Save.');\r\n// //       });\r\n// //   }\r\n\r\n//   fillForm = item => event => {\r\n//     event.preventDefault();\r\n//     this.props.history.push(\"/UserForm\", {\r\n//       userid: item.userid,\r\n//       username: item.username,\r\n//       password: item.password,\r\n//       age: item.age,\r\n//       adress: item.address,\r\n//       email: item.email,\r\n//       phonenumber: item.phonenumber\r\n//     });\r\n//   }\r\n\r\n//     // RegisterClickHandler = () =>\r\n//     // {\r\n//     //    const {userid} = this.state;\r\n//     //    const {username} = this.state;\r\n//     //    const {password} = this.state;\r\n//     //    const {age} = this.state;\r\n//     //    const {address} = this.state;\r\n//     //    const {email} = this.state; \r\n//     //    const {phonenumber} = this.state;\r\n//     //    let data = {\r\n//     //        userid: userid,\r\n//     //        username: username,\r\n//     //        password: password,\r\n//     //        age: age,\r\n//     //        address: address,\r\n//     //        email: email,\r\n//     //        phonenumber: phonenumber,\r\n           \r\n           \r\n//     //    }\r\n//     //    registerUser(data).then((res) =>{\r\n//     //         try{\r\n//     //             this.props.history.push(\"/\");\r\n//     //         }catch(error){\r\n//     //             console.log(\"Error while registrating\" + error);\r\n//     //             // return;\r\n//     //         }\r\n            \r\n//     //    })\r\n//     // };\r\n\r\n\r\n//     render() {\r\n//         let rows = [];\r\n\r\n        \r\n//         const contents = this.state.data.forEach((item, key) => {\r\n//           if(key % 2 === 0)\r\n//           {\r\n//             rows.push(\r\n//               <thead>\r\n//             <tr className='bg-secondary text-white'>\r\n//             <td>{item.userid}</td>\r\n//             <td>{item.username}</td>\r\n//             <td>{item.password}</td>\r\n//             <td>{item.age}</td>\r\n//             <td>{item.address}</td>\r\n//             <td>{item.email}</td>\r\n//             <td>{item.phonenumber}</td>\r\n//             <td><button onClick={this.fillForm(item)}>Edit</button></td>\r\n//             <td><button id={item.userid} onClick={this.deleteRecord}>Delete</button></td>\r\n//             </tr>\r\n//             </thead>\r\n//             );\r\n//           }else{\r\n//             rows.push(\r\n//             <thead>\r\n//             <tr className='bg-dark text-light'>\r\n//             <td>{item.userid}</td>\r\n//             <td>{item.username}</td>\r\n//             <td>{item.password}</td>\r\n//             <td>{item.age}</td>\r\n//             <td>{item.address}</td>\r\n//             <td>{item.email}</td>\r\n//             <td>{item.phonenumber}</td>\r\n//             <td><button className=\"btn bg-info\" onClick={this.fillForm(item)}>Edit</button></td>\r\n//             <td><button id={item.userid} onClick={this.deleteRecord}>Delete</button></td>\r\n//             </tr>\r\n//             </thead>\r\n            \r\n//             );\r\n            \r\n//           }\r\n//      })\r\n//         return (\r\n          \r\n//           <div className=\"container\">\r\n//             <Link to=\"/Home\">\r\n//         <img src=\"pharmacylogo.png\" width=\"20%\" height=\"20%\" className=\"d-inline-block align-top\" alt=\"\"></img>\r\n//     </Link>\r\n//             <table className=\"table table-striped\">\r\n//               <thead>\r\n//               <tr className='Table-header'>\r\n//                 <th>userid</th>\r\n//                 <th>Name</th>\r\n//                 <th>Password</th>\r\n//                 <th>Age</th>\r\n//                 <th>Address</th>\r\n//                 <th>Email</th>\r\n//                 <th>Phonenumber</th>\r\n//                 <th>Edit</th>\r\n//                 <th>Delete</th>\r\n//               </tr>\r\n//               </thead>\r\n//               {rows}\r\n//             </table>\r\n//                        <Link to='/registration'>\r\n//                          <button type=\"button\" className=\"btn btn-dark btn-lg btn-block\">Add user</button>\r\n                        \r\n//                        </Link>\r\n     \r\n//             <div className=\"row\">\r\n//             </div>\r\n//           </div>\r\n//         );\r\n//       }\r\n// }\r\n\r\n\r\n// export default myProfilePage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}