{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\MyProfile.js\";\nimport React, { Component } from 'react';\nimport { getUsers } from \"../actions/actions\";\nimport { deleteUser } from \"../actions/actions\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport actions from '../redux/actions/users';\nimport { Button } from 'react-bootstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nclass myProfilePage extends Component {\n  constructor() {\n    super();\n\n    this.deleteRecord = cell => {\n      let data = cell;\n      this.props.dispatch(actions.deleteSymptoms(data));\n    };\n\n    this.editDetails = cell => {\n      this.props.users.forEach(item => {\n        if (item.userid === cell) {\n          this.fillForm(item);\n        }\n      });\n    };\n\n    this.retrieveUsers = () => {\n      getUsers().then(res => {\n        this.setState({\n          data: res\n        });\n        console.log(res);\n      });\n    };\n\n    this.fillForm = item => {\n      this.props.history.push(\"/UserForm\", {\n        userid: item.userid,\n        username: item.username,\n        password: item.password,\n        age: item.age,\n        adress: item.address,\n        email: item.email,\n        phonenumber: item.phonenumber\n      });\n    };\n\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.fillForm = this.fillForm.bind(this);\n    this.state = {// data: []\n    };\n  }\n\n  componentDidMount() {//this.props.dispatch(actions.getUsers());\n    // this.retrieveUsers();\n  }\n\n  actionFormatter(cell) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `d-flex justify-content-between`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-secondary btn-sm\",\n      onClick: () => this.editDetails(cell),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-danger btn-sm\",\n      onClick: () => this.deleteRecord(cell),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Delete\"));\n  }\n\n  // RegisterClickHandler = () =>\n  // {\n  //    const {userid} = this.state;\n  //    const {username} = this.state;\n  //    const {password} = this.state;\n  //    const {age} = this.state;\n  //    const {address} = this.state;\n  //    const {email} = this.state; \n  //    const {phonenumber} = this.state;\n  //    let data = {\n  //        userid: userid,\n  //        username: username,\n  //        password: password,\n  //        age: age,\n  //        address: address,\n  //        email: email,\n  //        phonenumber: phonenumber,\n  //    }\n  //    registerUser(data).then((res) =>{\n  //         try{\n  //             this.props.history.push(\"/\");\n  //         }catch(error){\n  //             console.log(\"Error while registrating\" + error);\n  //             // return;\n  //         }\n  //    })\n  // };\n  render() {\n    const selectRow = {\n      mode: 'radio',\n      hideSelectColumn: true,\n      clickToSelect: true,\n      bgColor: 'green'\n    };\n    const options = {\n      sortName: 'user_id',\n      sortOrder: 'asc',\n      sizePerPage: 50,\n      paginationSize: 5,\n      sizePerPageDropDown: this.renderSizePerPageDropDown,\n      prePage: 'Prev',\n      // Previous page button text\n      nextPage: 'Next' // Next page button text\n\n    }; //     let rows = [];\n    //     const contents = this.state.data.forEach((item, key) => {\n    //       if(key % 2 === 0)\n    //       {\n    //         rows.push(\n    //           <thead>\n    //         <tr className='bg-secondary text-white'>\n    //         <td>{item.userid}</td>\n    //         <td>{item.username}</td>\n    //         <td>{item.password}</td>\n    //         <td>{item.age}</td>\n    //         <td>{item.address}</td>\n    //         <td>{item.email}</td>\n    //         <td>{item.phonenumber}</td>\n    //         <td><button id={item.userid}  onClick={this.fillForm(item)}>Edit</button></td>\n    //         <td><button id={item.userid}  onClick={this.deleteRecord}>Delete</button></td>\n    //         </tr>\n    //         </thead>\n    //         );\n    //       }else{\n    //         rows.push(\n    //         <thead>\n    //         <tr className='bg-dark text-light'>\n    //         <td>{item.userid}</td>\n    //         <td>{item.username}</td>\n    //         <td>{item.password}</td>\n    //         <td>{item.age}</td>\n    //         <td>{item.address}</td>\n    //         <td>{item.email}</td>\n    //         <td>{item.phonenumber}</td>\n    //         <td><button id={item.userid} className=\"btn bg-info\" onClick={this.fillForm(item)}>Edit</button></td>\n    //         <td><button id={item.userid} onClick={this.deleteRecord}>Delete</button></td>\n    //         </tr>\n    //         </thead>\n    //         );\n    //       }\n    //  })\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      bordered: false,\n      data: this.props.users,\n      version: \"4\",\n      pagination: true,\n      options: options,\n      search: true,\n      tableContainerClass: `table-striped table-bordered table-hover table-sm`,\n      selectRow: selectRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"100px\",\n      dataField: \"userid\",\n      isKey: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \"userid\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"150px\",\n      dataField: \"text\",\n      dataSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"150px\",\n      dataField: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"100px\",\n      dataField: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"100px\",\n      dataField: \"Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"100px\",\n      dataField: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      width: \"100px\",\n      dataField: \"user_id\",\n      dataFormat: this.actionFormatter.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }))) //       <div className=\"container\">\n    //         <Link to=\"/Home\">\n    //     <img src=\"pharmacylogo.png\" width=\"20%\" height=\"20%\" className=\"d-inline-block align-top\" alt=\"\"></img>\n    // </Link>\n    //         <table className=\"table table-striped\">\n    //           <thead>\n    //           <tr className='Table-header'>\n    //             <th>userid</th>\n    //             <th>Name</th>\n    //             <th>Password</th>\n    //             <th>Age</th>\n    //             <th>Address</th>\n    //             <th>Email</th>\n    //             <th>Phonenumber</th>\n    //             <th>Edit</th>\n    //             <th>Delete</th>\n    //           </tr>\n    //           </thead>\n    //           {rows}\n    //         </table>\n    //                    <Link to='/registration'>\n    //                      <button type=\"button\" className=\"btn btn-dark btn-lg btn-block\">Add user</button>\n    //                    </Link>\n    //         <div className=\"row\">\n    //         </div>\n    //       </div>\n    ;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.userReducer.users,\n  delMessage: state.userReducer.delMessage,\n  updateMessage: state.userReducer.updateMessage\n});\n\nexport default connect(mapStateToProps)(myProfilePage);","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/MyProfile.js"],"names":["React","Component","getUsers","deleteUser","Link","connect","actions","Button","BootstrapTable","TableHeaderColumn","myProfilePage","constructor","deleteRecord","cell","data","props","dispatch","deleteSymptoms","editDetails","users","forEach","item","userid","fillForm","retrieveUsers","then","res","setState","console","log","history","push","username","password","age","adress","address","email","phonenumber","bind","state","componentDidMount","actionFormatter","render","selectRow","mode","hideSelectColumn","clickToSelect","bgColor","options","sortName","sortOrder","sizePerPage","paginationSize","sizePerPageDropDown","renderSizePerPageDropDown","prePage","nextPage","mapStateToProps","userReducer","delMessage","updateMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { getUsers } from \"../actions/actions\";\r\nimport { deleteUser } from \"../actions/actions\";\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport actions from '../redux/actions/users';\r\nimport { Button } from 'react-bootstrap';\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nclass myProfilePage extends Component {\r\n    constructor(){\r\n        super();\r\n        this.deleteRecord = this.deleteRecord.bind(this);\r\n        this.fillForm = this.fillForm.bind(this);\r\n        this.state = {\r\n         // data: []\r\n        };\r\n    }\r\n   \r\n    componentDidMount() {\r\n      //this.props.dispatch(actions.getUsers());\r\n       // this.retrieveUsers();\r\n    }\r\n\r\n    actionFormatter(cell) {\r\n      return (\r\n        \r\n        <div className={`d-flex justify-content-between`}>\r\n          <Button className=\"btn-secondary btn-sm\" onClick={()=>this.editDetails(cell)}>Edit</Button>\r\n          <Button\r\n            className=\"btn-danger btn-sm\"\r\n            onClick={() => this.deleteRecord(cell)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n       )\r\n    }\r\n\r\n    deleteRecord = cell =>{\r\n      let data = cell;\r\n      this.props.dispatch(actions.deleteSymptoms(data));\r\n    }\r\n  \r\n    editDetails = (cell) =>{\r\n      this.props.users.forEach((item)=>{\r\n  \r\n        if(item.userid === cell)\r\n        {\r\n          this.fillForm(item);\r\n        }\r\n      })\r\n    }\r\n\r\n    retrieveUsers = () => {\r\n        getUsers().then((res) =>{\r\n        this.setState({data: res});\r\n        console.log(res);\r\n    });\r\n}\r\n\r\n// addRecord = () => event => {\r\n//     event.preventDefault();\r\n//     this.props.history.push(\"/UserForm\");\r\n//   };\r\n\r\n// deleteRecord = (event) => {\r\n//     event.preventDefault();\r\n//     let id = event.target.id;\r\n//     let data = {\r\n//       id:id,\r\n//     }\r\n//     console.log(data);\r\n//     deleteUser(data).then((res) =>{\r\n//       try {\r\n//         alert(\"user deleted\");\r\n//         this.props.history.push(\"/Home\");\r\n//       }catch(error){\r\n//         alert(\"error deleting\" + error);\r\n//       }\r\n      \r\n//     })\r\n// };\r\n\r\n// deleteRecord = event => {\r\n//   event.preventDefault();\r\n\r\n//   let url = \"http://localhost:3001/deleteUser\";\r\n//   fetch(url, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\"\r\n//     },\r\n//     body: JSON.stringify({\r\n//       userid: event.target.id\r\n//     })\r\n//   })\r\n//     .then(response => response.json())\r\n//     .then(responseJson => {\r\n//       alert(responseJson.value);\r\n//       this.fetchUsers();\r\n//     })\r\n//     .catch(error => {\r\n//       alert(\"Failed to Save.\");\r\n//     });\r\n// };\r\n\r\n\r\n\r\n\r\n// deleteRecord = (event) => {\r\n//     event.preventDefault();\r\n//     let url = 'http://localhost:3001/deleteUser';\r\n//     fetch(url, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           userid: event.target.userid,\r\n//         })\r\n// }).then((response) => response.json())\r\n//       .then((responseJson) => {\r\n\r\n//         alert(responseJson.value);\r\n//         this.fetchUsers();\r\n\r\n//       }).catch((error) => {\r\n//         alert('Failed to Save.');\r\n//       });\r\n//   }\r\n\r\n  fillForm = item => {\r\n    this.props.history.push(\"/UserForm\", {\r\n      userid: item.userid,\r\n      username: item.username,\r\n      password: item.password,\r\n      age: item.age,\r\n      adress: item.address,\r\n      email: item.email,\r\n      phonenumber: item.phonenumber\r\n    });\r\n  }\r\n\r\n    // RegisterClickHandler = () =>\r\n    // {\r\n    //    const {userid} = this.state;\r\n    //    const {username} = this.state;\r\n    //    const {password} = this.state;\r\n    //    const {age} = this.state;\r\n    //    const {address} = this.state;\r\n    //    const {email} = this.state; \r\n    //    const {phonenumber} = this.state;\r\n    //    let data = {\r\n    //        userid: userid,\r\n    //        username: username,\r\n    //        password: password,\r\n    //        age: age,\r\n    //        address: address,\r\n    //        email: email,\r\n    //        phonenumber: phonenumber,\r\n           \r\n           \r\n    //    }\r\n    //    registerUser(data).then((res) =>{\r\n    //         try{\r\n    //             this.props.history.push(\"/\");\r\n    //         }catch(error){\r\n    //             console.log(\"Error while registrating\" + error);\r\n    //             // return;\r\n    //         }\r\n            \r\n    //    })\r\n    // };\r\n\r\n\r\n    render() {\r\n\r\n      const selectRow = {\r\n        mode: 'radio',\r\n        hideSelectColumn: true,\r\n        clickToSelect: true,\r\n        bgColor: 'green'\r\n      };\r\n      const options = {\r\n        sortName: 'user_id',\r\n        sortOrder: 'asc',\r\n        sizePerPage: 50,\r\n        paginationSize: 5,\r\n        sizePerPageDropDown: this.renderSizePerPageDropDown,\r\n        prePage: 'Prev', // Previous page button text\r\n        nextPage: 'Next', // Next page button text\r\n      };\r\n  \r\n\r\n    \r\n    //     let rows = [];\r\n\r\n        \r\n    //     const contents = this.state.data.forEach((item, key) => {\r\n    //       if(key % 2 === 0)\r\n    //       {\r\n    //         rows.push(\r\n    //           <thead>\r\n    //         <tr className='bg-secondary text-white'>\r\n    //         <td>{item.userid}</td>\r\n    //         <td>{item.username}</td>\r\n    //         <td>{item.password}</td>\r\n    //         <td>{item.age}</td>\r\n    //         <td>{item.address}</td>\r\n    //         <td>{item.email}</td>\r\n    //         <td>{item.phonenumber}</td>\r\n    //         <td><button id={item.userid}  onClick={this.fillForm(item)}>Edit</button></td>\r\n    //         <td><button id={item.userid}  onClick={this.deleteRecord}>Delete</button></td>\r\n    //         </tr>\r\n    //         </thead>\r\n    //         );\r\n    //       }else{\r\n    //         rows.push(\r\n    //         <thead>\r\n    //         <tr className='bg-dark text-light'>\r\n    //         <td>{item.userid}</td>\r\n    //         <td>{item.username}</td>\r\n    //         <td>{item.password}</td>\r\n    //         <td>{item.age}</td>\r\n    //         <td>{item.address}</td>\r\n    //         <td>{item.email}</td>\r\n    //         <td>{item.phonenumber}</td>\r\n    //         <td><button id={item.userid} className=\"btn bg-info\" onClick={this.fillForm(item)}>Edit</button></td>\r\n    //         <td><button id={item.userid} onClick={this.deleteRecord}>Delete</button></td>\r\n    //         </tr>\r\n    //         </thead>\r\n            \r\n    //         );\r\n            \r\n    //       }\r\n    //  })\r\n        return (\r\n\r\n          <div className=\"container\">\r\n        <BootstrapTable bordered={false} data={this.props.users} version=\"4\" pagination options={options}\r\n                search tableContainerClass={`table-striped table-bordered table-hover table-sm`}\r\n                selectRow={selectRow} >\r\n\r\n                <TableHeaderColumn width=\"100px\" dataField=\"userid\" isKey>\r\n                userid\r\n                </TableHeaderColumn>\r\n\r\n                <TableHeaderColumn width=\"150px\" dataField=\"text\" dataSort>\r\n                Name\r\n                </TableHeaderColumn>\r\n\r\n                <TableHeaderColumn width=\"150px\" dataField=\"Password\">\r\n                Password\r\n                </TableHeaderColumn>\r\n\r\n                <TableHeaderColumn width=\"100px\" dataField=\"Age\">\r\n                Age\r\n                </TableHeaderColumn>\r\n\r\n                <TableHeaderColumn width=\"100px\" dataField=\"Address\">\r\n                Address\r\n                </TableHeaderColumn>\r\n\r\n                <TableHeaderColumn width=\"100px\" dataField=\"Email\">\r\n                Email\r\n                </TableHeaderColumn>\r\n\r\n                <TableHeaderColumn width=\"100px\" dataField=\"user_id\" dataFormat={this.actionFormatter.bind(this)}>\r\n                  \r\n                </TableHeaderColumn>\r\n                \r\n          </BootstrapTable>\r\n      </div>\r\n          \r\n    //       <div className=\"container\">\r\n    //         <Link to=\"/Home\">\r\n    //     <img src=\"pharmacylogo.png\" width=\"20%\" height=\"20%\" className=\"d-inline-block align-top\" alt=\"\"></img>\r\n    // </Link>\r\n    //         <table className=\"table table-striped\">\r\n    //           <thead>\r\n    //           <tr className='Table-header'>\r\n    //             <th>userid</th>\r\n    //             <th>Name</th>\r\n    //             <th>Password</th>\r\n    //             <th>Age</th>\r\n    //             <th>Address</th>\r\n    //             <th>Email</th>\r\n    //             <th>Phonenumber</th>\r\n    //             <th>Edit</th>\r\n    //             <th>Delete</th>\r\n    //           </tr>\r\n    //           </thead>\r\n    //           {rows}\r\n    //         </table>\r\n    //                    <Link to='/registration'>\r\n    //                      <button type=\"button\" className=\"btn btn-dark btn-lg btn-block\">Add user</button>\r\n                        \r\n    //                    </Link>\r\n     \r\n    //         <div className=\"row\">\r\n    //         </div>\r\n    //       </div>\r\n        );\r\n        }     \r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  users: state.userReducer.users,\r\n  delMessage: state.userReducer.delMessage,\r\n  updateMessage: state.userReducer.updateMessage,\r\n})\r\nexport default connect(mapStateToProps)(myProfilePage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}