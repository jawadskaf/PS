{"ast":null,"code":"var _jsxFileName = \"D:\\\\JawadsPharmacy\\\\csis279-app\\\\src\\\\components\\\\MedicineChart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getOrders } from \"../actions/actions\";\n\nvar CanvasJSReact = require('./canvasjs.react'); //var CanvasJS = CanvasJSReact.CanvasJS;\n\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass MedicineChart extends Component {\n  constructor() {\n    super();\n\n    this.retrieveUsers = () => {\n      getOrders().then(res => {\n        this.setState({\n          data: res\n        });\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      data: [],\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveUsers(); //  console.log(data)\n    //this.getchartData();\n  }\n\n  render() {\n    const options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Bounce Rate by Week of Year\"\n      },\n      axisY: {\n        title: \"Bounce Rate\",\n        suffix: \"%\"\n      },\n      axisX: {\n        title: \"Week of Year\",\n        prefix: \"W\",\n        interval: 2\n      },\n      data: [{\n        type: \"line\",\n        toolTipContent: \"Week {x}: {y}%\",\n        dataPoints: [{\n          x: 1,\n          y: 64\n        }, {\n          x: 2,\n          y: 61\n        }, {\n          x: 3,\n          y: 64\n        }, {\n          x: 4,\n          y: 62\n        }, {\n          x: 5,\n          y: 64\n        }, {\n          x: 6,\n          y: 60\n        }, {\n          x: 7,\n          y: 58\n        }, {\n          x: 8,\n          y: 59\n        }, {\n          x: 9,\n          y: 53\n        }, {\n          x: 10,\n          y: 54\n        }, {\n          x: 11,\n          y: 61\n        }, {\n          x: 12,\n          y: 60\n        }, {\n          x: 13,\n          y: 55\n        }, {\n          x: 14,\n          y: 60\n        }, {\n          x: 15,\n          y: 56\n        }, {\n          x: 16,\n          y: 60\n        }, {\n          x: 17,\n          y: 59.5\n        }, {\n          x: 18,\n          y: 63\n        }, {\n          x: 19,\n          y: 58\n        }, {\n          x: 20,\n          y: 54\n        }, {\n          x: 21,\n          y: 59\n        }, {\n          x: 22,\n          y: 64\n        }, {\n          x: 23,\n          y: 59\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default MedicineChart; // getchartData = () => {\n//         getOrders().then((res) =>{\n//         this.setState({data: res});\n//         console.log(res);\n//     }).then(res => res.json())\n//     .then((jsonarray) => {\n//         var labels = jsonarray.map(function(e) {\n//             console.log(e.medicineid);\n//             console.log(e.medicinename);\n//             return e.medicineid;\n//         });\n//         var data = jsonarray.map(function(e) {\n//             return e.medicinename;\n//         });\n//     // fetch(\"http://localhost:3001/getBmi/\")\n//     //     .then(res => res.json())\n//     //     .then((jsonarray) => {\n//     //         var labels = jsonarray.map(function(e) {\n//     //             console.log(e.id);\n//     //             console.log(labels);\n//     //             return e.bmiClass;\n//     //         });\n//     //         var data = jsonarray.map(function(e) {\n//     //             return e.bmiResult;\n//     //         });\n//             console.log(labels,data);\n//             this.setState({\n//                 chartData:{\n//                     labels:labels,\n//                     datasets:[\n//                         {\n//                             label:'Chart',\n//                             data:data\n//                         }\n//                     ]\n//                 }\n//             });\n//         });\n// };   \n// render(){\n//     return(\n//         <div className=\"App\">\n//             <header className=\"App-header\">\n//                 <Line chartData={this.state.chartData} location=\"Test\" legendPosition=\"bottom\"/>\n//             </header>\n//         </div>\n//     );\n// }","map":{"version":3,"sources":["D:/JawadsPharmacy/csis279-app/src/components/MedicineChart.js"],"names":["React","Component","Line","getOrders","CanvasJSReact","require","CanvasJSChart","MedicineChart","constructor","retrieveUsers","then","res","setState","data","console","log","state","chartData","componentDidMount","render","options","animationEnabled","exportEnabled","theme","title","text","axisY","suffix","axisX","prefix","interval","type","toolTipContent","dataPoints","x","y"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { getOrders} from \"../actions/actions\";\r\nvar CanvasJSReact = require('./canvasjs.react');\r\n//var CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nclass MedicineChart extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n           data: [],\r\n            chartData:{\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.retrieveUsers();\r\n      //  console.log(data)\r\n        //this.getchartData();\r\n    }\r\n\r\n    retrieveUsers = () => {\r\n        getOrders().then((res) =>{\r\n        this.setState({data: res});\r\n        console.log(res);\r\n    });\r\n}\r\n\r\nrender() {\r\n    const options = {\r\n        animationEnabled: true,\r\n        exportEnabled: true,\r\n        theme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\r\n        title:{\r\n            text: \"Bounce Rate by Week of Year\"\r\n        },\r\n        axisY: {\r\n            title: \"Bounce Rate\",\r\n            suffix: \"%\"\r\n        },\r\n        axisX: {\r\n            title: \"Week of Year\",\r\n            prefix: \"W\",\r\n            interval: 2\r\n        },\r\n        data: [{\r\n            type: \"line\",\r\n            toolTipContent: \"Week {x}: {y}%\",\r\n            dataPoints: [\r\n                { x: 1, y: 64 },\r\n                { x: 2, y: 61 },\r\n                { x: 3, y: 64 },\r\n                { x: 4, y: 62 },\r\n                { x: 5, y: 64 },\r\n                { x: 6, y: 60 },\r\n                { x: 7, y: 58 },\r\n                { x: 8, y: 59 },\r\n                { x: 9, y: 53 },\r\n                { x: 10, y: 54 },\r\n                { x: 11, y: 61 },\r\n                { x: 12, y: 60 },\r\n                { x: 13, y: 55 },\r\n                { x: 14, y: 60 },\r\n                { x: 15, y: 56 },\r\n                { x: 16, y: 60 },\r\n                { x: 17, y: 59.5 },\r\n                { x: 18, y: 63 },\r\n                { x: 19, y: 58 },\r\n                { x: 20, y: 54 },\r\n                { x: 21, y: 59 },\r\n                { x: 22, y: 64 },\r\n                { x: 23, y: 59 }\r\n            ]\r\n        }]\r\n    }\r\n    return (\r\n    <div>\r\n        <CanvasJSChart options = {options}\r\n            /* onRef={ref => this.chart = ref} */\r\n        />\r\n        {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default MedicineChart;\r\n\r\n    // getchartData = () => {\r\n        \r\n    //         getOrders().then((res) =>{\r\n    //         this.setState({data: res});\r\n    //         console.log(res);\r\n    //     }).then(res => res.json())\r\n    //     .then((jsonarray) => {\r\n    //         var labels = jsonarray.map(function(e) {\r\n    //             console.log(e.medicineid);\r\n    //             console.log(e.medicinename);\r\n    //             return e.medicineid;\r\n    //         });\r\n    //         var data = jsonarray.map(function(e) {\r\n    //             return e.medicinename;\r\n    //         });\r\n    \r\n    //     // fetch(\"http://localhost:3001/getBmi/\")\r\n    //     //     .then(res => res.json())\r\n    //     //     .then((jsonarray) => {\r\n    //     //         var labels = jsonarray.map(function(e) {\r\n    //     //             console.log(e.id);\r\n    //     //             console.log(labels);\r\n    //     //             return e.bmiClass;\r\n    //     //         });\r\n    //     //         var data = jsonarray.map(function(e) {\r\n    //     //             return e.bmiResult;\r\n    //     //         });\r\n\r\n    //             console.log(labels,data);\r\n\r\n    //             this.setState({\r\n    //                 chartData:{\r\n    //                     labels:labels,\r\n    //                     datasets:[\r\n    //                         {\r\n    //                             label:'Chart',\r\n    //                             data:data\r\n    //                         }\r\n    //                     ]\r\n    //                 }\r\n    //             });\r\n    //         });\r\n    // };   \r\n\r\n    // render(){\r\n    //     return(\r\n    //         <div className=\"App\">\r\n    //             <header className=\"App-header\">\r\n\r\n    //                 <Line chartData={this.state.chartData} location=\"Test\" legendPosition=\"bottom\"/>\r\n    //             </header>\r\n    //         </div>\r\n\r\n    //     );\r\n    // }\r\n"]},"metadata":{},"sourceType":"module"}