{"ast":null,"code":"import { getDogs } from '../../actions/actions';\nimport { toast } from 'react-toastify';\nexport const GET_DOG_STARTED = 'GET_DOG_STARTED';\nexport const GET_DOG_SUCCESS = 'GET_DOG_SUCCESS';\nexport const GET_DOG_ERROR = 'GET_DOG_ERROR';\nexport const CREATE_DOG_STARTED = 'CREATE_DOG_STARTED';\nexport const CREATE_DOG_SUCCESS = 'CREATE_DOG_SUCCESS';\nexport const CREATE_DOG_ERROR = 'CREATE_DOG_ERROR';\nconst dogActions = {\n  getDogs: () => async dispatch => {\n    try {\n      dispatch({\n        type: GET_DOG_STARTED\n      });\n      let response = await getDogs();\n      dispatch({\n        type: GET_DOG_SUCCESS,\n        payload: {\n          data: response\n        }\n      });\n    } catch (error) {\n      toast.error('ERROR GETTING DOGS' + error);\n      dispatch({\n        type: GET_DOG_ERROR\n      });\n    }\n  } //   adoptDogs: (data) => async (dispatch) => {\n  //     try {\n  //       dispatch({\n  //         type: CREATE_DOG_STARTED,\n  //       });\n  //       await adoptDogs(data);\n  //       dispatch({\n  //         type: CREATE_DOG_SUCCESS,\n  //         payload: {\n  //           message: 'adoption added successfully',\n  //         }\n  //       });\n  //     } catch (err) {\n  //       dispatch({\n  //         type: CREATE_DOG_ERROR,\n  //         payload: {\n  //           message: 'failed to adopt dog!',\n  //         }\n  //       })\n  //     }\n  //   },\n\n};\nexport default dogActions;","map":{"version":3,"sources":["D:/PS/PS/app/src/redux/actions/dogs.js"],"names":["getDogs","toast","GET_DOG_STARTED","GET_DOG_SUCCESS","GET_DOG_ERROR","CREATE_DOG_STARTED","CREATE_DOG_SUCCESS","CREATE_DOG_ERROR","dogActions","dispatch","type","response","payload","data","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAGP,MAAMC,UAAU,GAAG;AAEjBR,EAAAA,OAAO,EAAE,MAAM,MAAOS,QAAP,IAAoB;AACjC,QAAI;AACFA,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER;AADC,OAAD,CAAR;AAGA,UAAIS,QAAQ,GAAG,MAAMX,OAAO,EAA5B;AACAS,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,eADC;AAEPS,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEF;AADC;AAFF,OAAD,CAAR;AAMD,KAXD,CAWE,OAAOG,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAY,uBAAuBA,KAAnC;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN;AADC,OAAD,CAAR;AAGD;AACF,GApBgB,CAqBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzCmB,CAAnB;AA4CA,eAAeI,UAAf","sourcesContent":["import { getDogs } from '../../actions/actions';\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const GET_DOG_STARTED = 'GET_DOG_STARTED'\r\nexport const GET_DOG_SUCCESS = 'GET_DOG_SUCCESS'\r\nexport const GET_DOG_ERROR = 'GET_DOG_ERROR'\r\n\r\nexport const CREATE_DOG_STARTED = 'CREATE_DOG_STARTED'\r\nexport const CREATE_DOG_SUCCESS = 'CREATE_DOG_SUCCESS'\r\nexport const CREATE_DOG_ERROR = 'CREATE_DOG_ERROR'\r\n\r\n\r\nconst dogActions = {\r\n\r\n  getDogs: () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_DOG_STARTED,\r\n      });\r\n      let response = await getDogs()\r\n      dispatch({\r\n        type: GET_DOG_SUCCESS,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      toast.error('ERROR GETTING DOGS' + error)\r\n      dispatch({\r\n        type: GET_DOG_ERROR,\r\n      });\r\n    }\r\n  },\r\n//   adoptDogs: (data) => async (dispatch) => {\r\n//     try {\r\n//       dispatch({\r\n//         type: CREATE_DOG_STARTED,\r\n//       });\r\n//       await adoptDogs(data);\r\n//       dispatch({\r\n//         type: CREATE_DOG_SUCCESS,\r\n//         payload: {\r\n//           message: 'adoption added successfully',\r\n//         }\r\n//       });\r\n//     } catch (err) {\r\n//       dispatch({\r\n//         type: CREATE_DOG_ERROR,\r\n//         payload: {\r\n//           message: 'failed to adopt dog!',\r\n//         }\r\n//       })\r\n//     }\r\n//   },\r\n};\r\n\r\nexport default dogActions;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}